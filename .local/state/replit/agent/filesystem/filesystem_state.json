{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Interaktywna Nauka - Polish Educational Web Application\n\n## Overview\n\nThis is a comprehensive educational web application called \"Interaktywna Nauka\" (Interactive Learning) built for teaching physics concepts through interactive modules. The application focuses on making complex scientific topics accessible through visual simulations, 3D models, and hands-on experiments. It covers four main categories: electricity & magnetism, earth & space, microworld, and perception & human senses. The application is designed as a progressive web app (PWA) with multilingual support (Polish, English, Hungarian) and features adaptive quizzes, daily facts, and a unique scale explorer tool.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\nThe application uses a modern React 18+ architecture with TypeScript and Vite as the build tool. The frontend follows a component-based modular design with clear separation of concerns:\n\n- **Routing**: Uses Wouter for lightweight client-side routing\n- **State Management**: React Context API for global state (AppContext) with local component state\n- **Styling**: Tailwind CSS with a custom brown/gold dark theme optimized for educational content\n- **UI Components**: shadcn/ui component library adapted for React/Vite with extensive Radix UI primitives\n- **Animations**: Framer Motion for smooth transitions and interactive elements\n- **Internationalization**: react-intl for multi-language support (pl, en, hu)\n\n### Interactive Module System\nThe application features a sophisticated interactive module architecture:\n\n- **Simulation Components**: Physics simulations like electron drift, AC current visualization\n- **3D Models**: React Three Fiber integration for 3D visualizations (planned)\n- **Experiment Modules**: Virtual experiments like billiard ball analogies for electron movement\n- **Circuit Builder**: Drag-and-drop circuit construction with real-time feedback\n- **Scale Explorer**: Multi-scale visualization from atomic to cosmic levels\n- **Adaptive Quiz System**: Dynamic difficulty adjustment based on user performance\n\n### Content Management\nThe application uses a structured content system:\n\n- **MDX Integration**: Planned for rich educational content with embedded interactive components\n- **Educational Progress Tracking**: User progress monitoring across topics and categories\n- **Daily Facts System**: Rotating educational content with multilingual support\n\n### Backend Architecture\nThe backend follows a minimal Express.js approach:\n\n- **RESTful API**: Express server with TypeScript\n- **Modular Storage Interface**: Abstracted storage layer supporting both in-memory and database backends\n- **Development Environment**: Vite integration for hot module replacement in development\n\n### Theme and Design System\nCustom design system optimized for educational content:\n\n- **Dark-first Design**: Brown and gold color palette for reduced eye strain\n- **Accessibility**: ARIA patterns and keyboard navigation support\n- **Responsive Design**: Mobile-first approach with desktop enhancements\n- **Typography**: Multi-font system (Inter, Fira Code, Source Sans Pro) for different content types\n\n## External Dependencies\n\n### Core Framework Dependencies\n- **React 18+**: Frontend framework with modern hooks and concurrent features\n- **TypeScript**: Type safety across the entire application stack\n- **Vite**: Build tool and development server with HMR support\n- **Express.js**: Backend web server framework\n\n### UI and Styling\n- **Tailwind CSS**: Utility-first CSS framework with custom configuration\n- **shadcn/ui**: Component library built on Radix UI primitives\n- **Radix UI**: Headless UI components for accessibility and functionality\n- **Framer Motion**: Animation library for interactive elements\n- **Lucide React**: Icon library for consistent iconography\n\n### Database and ORM\n- **Drizzle ORM**: Type-safe SQL ORM configured for PostgreSQL\n- **PostgreSQL**: Primary database (configured but may be added later)\n- **Neon Database**: Serverless PostgreSQL provider (@neondatabase/serverless)\n\n### Development and Build Tools\n- **ESLint & Prettier**: Code quality and formatting (configured)\n- **PostCSS**: CSS processing with Tailwind integration\n- **React Testing Library**: Component testing framework\n- **Playwright**: End-to-end testing (planned)\n\n### Form Handling and Validation\n- **React Hook Form**: Form state management\n- **Zod**: Schema validation library\n- **@hookform/resolvers**: Integration between React Hook Form and Zod\n\n### Internationalization and Data\n- **react-intl**: Internationalization framework for multi-language support\n- **date-fns**: Date manipulation and formatting\n- **@tanstack/react-query**: Server state management and caching\n\n### Interactive Content\n- **KaTeX**: Mathematical notation rendering (planned via react-katex)\n- **Recharts**: Data visualization and charting library\n- **Embla Carousel**: Touch-friendly carousel component\n- **React Three Fiber**: 3D graphics rendering (planned integration)\n\n### PWA and Performance\n- **Service Worker**: Offline functionality and caching (configured)\n- **Web App Manifest**: PWA configuration for installable app experience\n- **Replit Integration**: Development environment optimizations for Replit platform","size_bytes":5321},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        \"slide-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-collapsible-content-height)\",\n          },\n        },\n        \"slide-up\": {\n          from: {\n            height: \"var(--radix-collapsible-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"slide-down\": \"slide-down 0.2s ease-out\",\n        \"slide-up\": \"slide-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3375},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { \n      ...insertUser, \n      id, \n      preferredLanguage: insertUser.preferredLanguage || 'pl',\n      createdAt: new Date() \n    };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1105},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, boolean, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  preferredLanguage: text(\"preferred_language\").default(\"pl\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const educationalProgress = pgTable(\"educational_progress\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  categoryId: text(\"category_id\").notNull(),\n  topicId: text(\"topic_id\").notNull(),\n  completed: boolean(\"completed\").default(false).notNull(),\n  completionPercentage: integer(\"completion_percentage\").default(0).notNull(),\n  lastAccessed: timestamp(\"last_accessed\").defaultNow().notNull(),\n});\n\nexport const quizAttempts = pgTable(\"quiz_attempts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  topicId: text(\"topic_id\").notNull(),\n  score: integer(\"score\").notNull(),\n  totalQuestions: integer(\"total_questions\").notNull(),\n  difficultyLevel: text(\"difficulty_level\").notNull(),\n  completedAt: timestamp(\"completed_at\").defaultNow().notNull(),\n});\n\nexport const dailyFacts = pgTable(\"daily_facts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  titlePl: text(\"title_pl\").notNull(),\n  titleEn: text(\"title_en\").notNull(),\n  titleHu: text(\"title_hu\").notNull(),\n  contentPl: text(\"content_pl\").notNull(),\n  contentEn: text(\"content_en\").notNull(),\n  contentHu: text(\"content_hu\").notNull(),\n  category: text(\"category\").notNull(),\n  isActive: boolean(\"is_active\").default(true).notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n  preferredLanguage: true,\n});\n\nexport const insertProgressSchema = createInsertSchema(educationalProgress).pick({\n  userId: true,\n  categoryId: true,\n  topicId: true,\n  completed: true,\n  completionPercentage: true,\n});\n\nexport const insertQuizAttemptSchema = createInsertSchema(quizAttempts).pick({\n  userId: true,\n  topicId: true,\n  score: true,\n  totalQuestions: true,\n  difficultyLevel: true,\n});\n\nexport const insertDailyFactSchema = createInsertSchema(dailyFacts).pick({\n  titlePl: true,\n  titleEn: true,\n  titleHu: true,\n  contentPl: true,\n  contentEn: true,\n  contentHu: true,\n  category: true,\n  isActive: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertProgress = z.infer<typeof insertProgressSchema>;\nexport type EducationalProgress = typeof educationalProgress.$inferSelect;\nexport type InsertQuizAttempt = z.infer<typeof insertQuizAttemptSchema>;\nexport type QuizAttempt = typeof quizAttempts.$inferSelect;\nexport type InsertDailyFact = z.infer<typeof insertDailyFactSchema>;\nexport type DailyFact = typeof dailyFacts.$inferSelect;\n","size_bytes":3238},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { IntlProvider } from 'react-intl';\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { AppContextProvider } from \"@/contexts/AppContext\";\nimport { Navigation } from \"@/components/Navigation\";\nimport { useTheme } from \"@/hooks/useTheme\";\nimport { messages } from \"@/lib/i18n\";\nimport { Language } from \"@/types/education\";\nimport { useState } from \"react\";\n\n// Pages\nimport Home from \"@/pages/Home\";\nimport ElectricityMagnetism from \"@/pages/ElectricityMagnetism\";\nimport EarthSpace from \"@/pages/EarthSpace\";\nimport Microworld from \"@/pages/Microworld\";\nimport Perception from \"@/pages/Perception\";\nimport Quiz from \"@/pages/Quiz\";\nimport Facts from \"@/pages/Facts\";\nimport Scale from \"@/pages/Scale\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router({ currentLanguage, setCurrentLanguage, theme, toggleTheme }: {\n  currentLanguage: Language;\n  setCurrentLanguage: (lang: Language) => void;\n  theme: 'light' | 'dark';\n  toggleTheme: () => void;\n}) {\n\n  return (\n    <IntlProvider \n      locale={currentLanguage} \n      messages={messages[currentLanguage]}\n      defaultLocale=\"pl\"\n    >\n      <div className=\"min-h-screen bg-background text-foreground\">\n        <Navigation \n          currentLanguage={currentLanguage}\n          onLanguageChange={setCurrentLanguage}\n          theme={theme}\n          onThemeToggle={toggleTheme}\n        />\n        \n        <Switch>\n          <Route path=\"/\" component={() => <Home language={currentLanguage} />} />\n          <Route path=\"/electricity-magnetism\" component={() => <ElectricityMagnetism language={currentLanguage} />} />\n          <Route path=\"/earth-space\" component={() => <EarthSpace language={currentLanguage} />} />\n          <Route path=\"/microworld\" component={() => <Microworld language={currentLanguage} />} />\n          <Route path=\"/perception\" component={() => <Perception language={currentLanguage} />} />\n          <Route path=\"/quiz\" component={() => <Quiz language={currentLanguage} />} />\n          <Route path=\"/facts\" component={() => <Facts language={currentLanguage} />} />\n          <Route path=\"/scale\" component={() => <Scale language={currentLanguage} />} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </IntlProvider>\n  );\n}\n\nfunction App() {\n  const { theme, toggleTheme } = useTheme();\n  const [currentLanguage, setCurrentLanguage] = useState<Language>('pl');\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <AppContextProvider>\n          <Router \n            currentLanguage={currentLanguage}\n            setCurrentLanguage={setCurrentLanguage}\n            theme={theme}\n            toggleTheme={toggleTheme}\n          />\n          <Toaster />\n        </AppContextProvider>\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":3041},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Source+Sans+Pro:wght@400;600;700&family=Fira+Code:wght@300;400;500;600;700&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  /* Domyślne kolory (motyw jasny) */\n  --background: hsl(43, 50%, 95%);\n  --foreground: hsl(28, 40%, 12%);\n  --card: hsl(43, 30%, 92%);\n  --card-foreground: hsl(28, 80%, 8%);\n  --popover: hsl(43, 30%, 92%);\n  --popover-foreground: hsl(28, 80%, 8%);\n  --primary: hsl(43, 74%, 45%);\n  --primary-foreground: hsl(43, 50%, 95%);\n  --secondary: hsl(43, 20%, 85%);\n  --secondary-foreground: hsl(28, 90%, 5%);\n  --muted: hsl(43, 15%, 88%);\n  --muted-foreground: hsl(28, 90%, 8%);\n  --accent: hsl(43, 84%, 40%);\n  --accent-foreground: hsl(43, 50%, 95%);\n  --destructive: hsl(0, 72%, 50%);\n  --destructive-foreground: hsl(0, 85%, 97%);\n  --border: hsl(43, 20%, 82%);\n  --input: hsl(43, 20%, 82%);\n  --ring: hsl(43, 74%, 45%);\n  --chart-1: hsl(43, 74%, 45%);\n  --chart-2: hsl(28, 45%, 60%);\n  --chart-3: hsl(43, 84%, 40%);\n  --chart-4: hsl(28, 35%, 55%);\n  --chart-5: hsl(43, 64%, 35%);\n  --sidebar: hsl(43, 30%, 90%);\n  --sidebar-foreground: hsl(28, 95%, 3%);\n  --sidebar-primary: hsl(43, 74%, 45%);\n  --sidebar-primary-foreground: hsl(43, 50%, 95%);\n  --sidebar-accent: hsl(43, 84%, 40%);\n  --sidebar-accent-foreground: hsl(43, 50%, 95%);\n  --sidebar-border: hsl(43, 20%, 82%);\n  --sidebar-ring: hsl(43, 74%, 45%);\n  --font-sans: \"Inter\", system-ui, sans-serif;\n  --font-serif: \"Source Sans Pro\", serif;\n  --font-mono: \"Fira Code\", monospace;\n  --radius: 0.5rem;\n}\n\n/* Dark theme - brązowo-złote odcienie zgodnie z opisem projektu */\n.dark {\n  --background: hsl(28, 30%, 8%);\n  --foreground: hsl(43, 30%, 95%);\n  --card: hsl(28, 25%, 12%);\n  --card-foreground: hsl(43, 30%, 95%);\n  --popover: hsl(28, 25%, 12%);\n  --popover-foreground: hsl(43, 30%, 95%);\n  --primary: hsl(43, 74%, 66%);\n  --primary-foreground: hsl(28, 30%, 8%);\n  --secondary: hsl(28, 20%, 18%);\n  --secondary-foreground: hsl(43, 30%, 95%);\n  --muted: hsl(28, 15%, 15%);\n  --muted-foreground: hsl(43, 30%, 90%);\n  --accent: hsl(43, 84%, 58%);\n  --accent-foreground: hsl(28, 30%, 8%);\n  --destructive: hsl(0, 62%, 50%);\n  --destructive-foreground: hsl(0, 85%, 97%);\n  --border: hsl(28, 15%, 22%);\n  --input: hsl(28, 15%, 22%);\n  --ring: hsl(43, 74%, 66%);\n  --chart-1: hsl(43, 74%, 66%);\n  --chart-2: hsl(28, 45%, 55%);\n  --chart-3: hsl(43, 84%, 58%);\n  --chart-4: hsl(28, 35%, 45%);\n  --chart-5: hsl(43, 64%, 48%);\n  --sidebar: hsl(28, 25%, 10%);\n  --sidebar-foreground: hsl(43, 40%, 98%);\n  --sidebar-primary: hsl(43, 74%, 66%);\n  --sidebar-primary-foreground: hsl(28, 30%, 8%);\n  --sidebar-accent: hsl(43, 84%, 58%);\n  --sidebar-accent-foreground: hsl(28, 30%, 8%);\n  --sidebar-border: hsl(28, 15%, 22%);\n  --sidebar-ring: hsl(43, 74%, 66%);\n}\n\n.light {\n  --background: hsl(43, 50%, 95%);\n  --foreground: hsl(28, 40%, 12%);\n  --card: hsl(43, 30%, 92%);\n  --card-foreground: hsl(28, 35%, 15%);\n  --popover: hsl(43, 30%, 92%);\n  --popover-foreground: hsl(28, 35%, 15%);\n  --primary: hsl(43, 74%, 45%);\n  --primary-foreground: hsl(43, 50%, 95%);\n  --secondary: hsl(43, 20%, 85%);\n  --secondary-foreground: hsl(28, 35%, 20%);\n  --muted: hsl(43, 15%, 88%);\n  --muted-foreground: hsl(28, 25%, 45%);\n  --accent: hsl(43, 84%, 40%);\n  --accent-foreground: hsl(43, 50%, 95%);\n  --destructive: hsl(0, 72%, 50%);\n  --destructive-foreground: hsl(0, 85%, 97%);\n  --border: hsl(43, 20%, 82%);\n  --input: hsl(43, 20%, 82%);\n  --ring: hsl(43, 74%, 45%);\n  --chart-1: hsl(43, 74%, 45%);\n  --chart-2: hsl(28, 45%, 60%);\n  --chart-3: hsl(43, 84%, 40%);\n  --chart-4: hsl(28, 35%, 55%);\n  --chart-5: hsl(43, 64%, 35%);\n  --sidebar: hsl(43, 30%, 90%);\n  --sidebar-foreground: hsl(28, 35%, 15%);\n  --sidebar-primary: hsl(43, 74%, 45%);\n  --sidebar-primary-foreground: hsl(43, 50%, 95%);\n  --sidebar-accent: hsl(43, 84%, 40%);\n  --sidebar-accent-foreground: hsl(43, 50%, 95%);\n  --sidebar-border: hsl(43, 20%, 82%);\n  --sidebar-ring: hsl(43, 74%, 45%);\n}\n\n* {\n  border-color: hsl(var(--border));\n}\n\nbody {\n  font-family: var(--font-sans);\n  background-color: hsl(var(--background));\n  color: hsl(var(--foreground));\n  line-height: 1.6;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/* Navigation animations */\n.nav-active {\n  transform: translateX(0);\n}\n\n.nav-hidden {\n  transform: translateX(-100%);\n}\n\n/* Interactive module styling */\n.interactive-module {\n  background: linear-gradient(135deg, hsl(var(--card)) 0%, hsl(28, 20%, 14%) 100%);\n  border: 1px solid hsl(var(--border));\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\n}\n\n/* Electron animation */\n.electron-dot {\n  width: 6px;\n  height: 6px;\n  background: hsl(var(--primary));\n  border-radius: 50%;\n  position: absolute;\n  animation: chaotic-movement 3s infinite ease-in-out;\n}\n\n@keyframes chaotic-movement {\n  0%, 100% { transform: translate(0, 0); }\n  25% { transform: translate(15px, -10px); }\n  50% { transform: translate(-8px, 12px); }\n  75% { transform: translate(10px, 8px); }\n}\n\n.drift-animation {\n  animation: electron-drift 4s linear infinite;\n}\n\n@keyframes electron-drift {\n  0% { transform: translateX(-50px); }\n  100% { transform: translateX(250px); }\n}\n\n/* Billiard ball styling */\n.billiard-ball {\n  width: 24px;\n  height: 24px;\n  background: linear-gradient(135deg, hsl(var(--accent)) 0%, hsl(43, 64%, 48%) 100%);\n  border-radius: 50%;\n  display: inline-block;\n  margin: 0 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  transition: transform 0.2s ease;\n}\n\n.billiard-impact {\n  animation: billiard-impact 0.5s ease-out;\n}\n\n@keyframes billiard-impact {\n  0% { transform: translateX(0); }\n  50% { transform: translateX(5px); }\n  100% { transform: translateX(0); }\n}\n\n/* Circuit component styling */\n.circuit-component {\n  cursor: grab;\n  transition: transform 0.2s ease;\n}\n\n.circuit-component:hover {\n  transform: scale(1.05);\n  filter: brightness(1.2);\n}\n\n.circuit-component:active {\n  cursor: grabbing;\n}\n\n/* Earth orbit animation */\n.earth-orbit {\n  animation: earth-rotation 20s linear infinite;\n}\n\n@keyframes earth-rotation {\n  0% { transform: rotate(0deg) translateX(80px) rotate(0deg); }\n  100% { transform: rotate(360deg) translateX(80px) rotate(-360deg); }\n}\n\n/* Wave animation for AC current */\n.wave-animation {\n  animation: wave-motion 2s ease-in-out infinite;\n}\n\n@keyframes wave-motion {\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-10px); }\n}\n\n/* Taste receptor styling */\n.taste-receptor {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  background: hsl(var(--muted));\n  transition: background-color 0.3s ease;\n}\n\n.taste-receptor.active {\n  background: hsl(var(--accent));\n  box-shadow: 0 0 8px hsl(var(--accent));\n}\n\n/* Scale zoom animations */\n.scale-zoom {\n  transition: transform 0.5s ease, opacity 0.3s ease;\n}\n\n.hidden-module {\n  opacity: 0;\n  transform: scale(0.8);\n}\n\n.visible-module {\n  opacity: 1;\n  transform: scale(1);\n}\n\n/* Slider styling */\n.slider {\n  -webkit-appearance: none;\n  appearance: none;\n  background: hsl(var(--muted));\n  outline: none;\n  border-radius: 0.5rem;\n}\n\n.slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background: hsl(var(--primary));\n  cursor: pointer;\n  border: 2px solid hsl(var(--background));\n}\n\n.slider::-moz-range-thumb {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background: hsl(var(--primary));\n  cursor: pointer;\n  border: 2px solid hsl(var(--background));\n}\n\n/* Progress bar animations */\n.progress-fill {\n  transition: width 0.3s ease;\n}\n\n/* Accessibility improvements */\n@media (prefers-reduced-motion: reduce) {\n  .electron-dot,\n  .drift-animation,\n  .wave-animation,\n  .earth-orbit {\n    animation: none;\n  }\n}\n\n/* Focus styles for accessibility */\n*:focus-visible {\n  outline: 2px solid hsl(var(--ring));\n  outline-offset: 2px;\n}\n\n/* High contrast mode support */\n@media (prefers-contrast: high) {\n  :root {\n    --border: hsl(43, 50%, 40%);\n    --muted: hsl(28, 25%, 20%);\n  }\n}\n","size_bytes":8134},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/DailyFact.tsx":{"content":"import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Lightbulb } from 'lucide-react';\nimport { Language } from '@/types/education';\nimport { DAILY_FACTS } from '@/lib/constants';\n\ninterface DailyFactProps {\n  language: Language;\n}\n\nexport function DailyFact({ language }: DailyFactProps) {\n  // In a real app, this would fetch from an API\n  const todaysFact = DAILY_FACTS[0];\n\n  const getTitle = () => {\n    switch (language) {\n      case 'en': return todaysFact.titleEn;\n      case 'hu': return todaysFact.titleHu;\n      default: return todaysFact.titlePl;\n    }\n  };\n\n  const getContent = () => {\n    switch (language) {\n      case 'en': return todaysFact.contentEn;\n      case 'hu': return todaysFact.contentHu;\n      default: return todaysFact.contentPl;\n    }\n  };\n\n  return (\n    <div \n      className=\"bg-gradient-to-r from-accent to-primary p-6 rounded-xl text-accent-foreground mb-8\"\n      data-testid=\"daily-fact\"\n    >\n      <div className=\"flex items-start gap-4\">\n        <div className=\"p-2 bg-black bg-opacity-20 rounded-lg\">\n          <Lightbulb className=\"w-6 h-6\" />\n        </div>\n        <div>\n          <h3 className=\"font-bold text-lg mb-2\">\n            <FormattedMessage id=\"daily.fact.title\" defaultMessage=\"Ciekawostka dnia\" />\n          </h3>\n          <p className=\"opacity-90\">{getContent()}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1400},"client/src/components/MDXRenderer.tsx":{"content":"import React from 'react';\nimport { motion } from 'framer-motion';\n\ninterface MDXRendererProps {\n  content: string;\n  children?: React.ReactNode;\n}\n\nexport function MDXRenderer({ content, children }: MDXRendererProps) {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"prose prose-lg max-w-none prose-invert\"\n      data-testid=\"mdx-content\"\n    >\n      {/* In a real implementation, this would use MDX to render the content */}\n      <div dangerouslySetInnerHTML={{ __html: content }} />\n      {children}\n    </motion.div>\n  );\n}\n","size_bytes":637},"client/src/components/Navigation.tsx":{"content":"import React, { useState } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { FormattedMessage } from 'react-intl';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Menu, \n  X, \n  Atom, \n  Zap, \n  Globe, \n  Microscope, \n  Eye, \n  Brain, \n  Lightbulb, \n  Maximize,\n  ChevronRight,\n  Clock,\n  Bookmark,\n  Sun,\n  Moon\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Separator } from '@/components/ui/separator';\nimport { CATEGORIES, LANGUAGES } from '@/lib/constants';\nimport { Language } from '@/types/education';\n\ninterface NavigationProps {\n  currentLanguage: Language;\n  onLanguageChange: (lang: Language) => void;\n  theme: 'light' | 'dark';\n  onThemeToggle: () => void;\n}\n\nexport function Navigation({ currentLanguage, onLanguageChange, theme, onThemeToggle }: NavigationProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [location] = useLocation();\n\n  const toggleNav = () => setIsOpen(!isOpen);\n  const closeNav = () => setIsOpen(false);\n\n  const navVariants = {\n    hidden: { x: '-100%' },\n    visible: { x: 0 }\n  };\n\n  const iconMap = {\n    zap: Zap,\n    globe: Globe,\n    microscope: Microscope,\n    eye: Eye\n  };\n\n  return (\n    <>\n      {/* Navigation Toggle Button */}\n      <Button\n        onClick={toggleNav}\n        className=\"fixed top-4 left-4 z-[60] p-3 bg-primary text-primary-foreground hover:bg-accent hover:text-accent-foreground\"\n        aria-label={isOpen ? 'Zamknij menu nawigacyjne' : 'Otwórz menu nawigacyjne'}\n        aria-expanded={isOpen}\n        aria-controls=\"main-navigation\"\n        data-testid=\"nav-toggle\"\n      >\n        {isOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n      </Button>\n\n      {/* Overlay */}\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className=\"fixed inset-0 bg-black bg-opacity-50 z-40\"\n            onClick={toggleNav}\n            aria-hidden=\"true\"\n            data-testid=\"nav-overlay\"\n          />\n        )}\n      </AnimatePresence>\n\n      {/* Vertical Navigation */}\n      <motion.nav\n        initial=\"hidden\"\n        animate={isOpen ? \"visible\" : \"hidden\"}\n        variants={navVariants}\n        transition={{ duration: 0.3, ease: \"easeInOut\" }}\n        className=\"fixed left-0 top-0 h-full w-80 bg-sidebar/95 backdrop-blur-sm border-r border-sidebar-border z-50 shadow-2xl\"\n        id=\"main-navigation\"\n        role=\"navigation\"\n        aria-label=\"Menu główne\"\n        data-testid=\"vertical-nav\"\n      >\n        <div className=\"p-6\">\n          {/* Logo and Brand */}\n          <div className=\"flex items-center gap-3 mb-8\">\n            <div className=\"w-10 h-10 bg-sidebar-primary rounded-lg flex items-center justify-center\">\n              <Atom className=\"w-6 h-6 text-sidebar-primary-foreground\" />\n            </div>\n            <div>\n              <h1 className=\"text-xl font-bold text-sidebar-foreground\">Interaktywna Nauka</h1>\n              <p className=\"text-sm text-muted-foreground\">Physics Learning Hub</p>\n            </div>\n          </div>\n\n          {/* Language Switcher */}\n          <div className=\"flex gap-1 mb-6 p-1 bg-muted rounded-lg\" role=\"group\" aria-label=\"Wybór języka\">\n            {Object.entries(LANGUAGES).map(([code, lang]) => (\n              <Button\n                key={code}\n                variant={currentLanguage === code ? \"default\" : \"ghost\"}\n                size=\"sm\"\n                onClick={() => onLanguageChange(code as Language)}\n                className=\"flex-1 text-xs\"\n                aria-label={`Zmień język na ${lang.name}`}\n                data-testid={`lang-${code}`}\n              >\n                {lang.flag} {code.toUpperCase()}\n              </Button>\n            ))}\n          </div>\n\n          {/* Theme Toggle */}\n          <div className=\"flex gap-1 mb-6 p-1 bg-muted rounded-lg\" role=\"group\" aria-label=\"Przełącznik motywu\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={onThemeToggle}\n              className=\"flex-1 text-xs\"\n              aria-label={theme === 'dark' ? 'Przełącz na motyw jasny' : 'Przełącz na motyw ciemny'}\n              data-testid=\"theme-toggle\"\n            >\n              {theme === 'dark' ? (\n                <>\n                  <Sun className=\"w-4 h-4 mr-2\" />\n                  <FormattedMessage id=\"theme.light\" defaultMessage=\"JASNY\" />\n                </>\n              ) : (\n                <>\n                  <Moon className=\"w-4 h-4 mr-2\" />\n                  <FormattedMessage id=\"theme.dark\" defaultMessage=\"CIEMNY\" />\n                </>\n              )}\n            </Button>\n          </div>\n\n          {/* Navigation Menu */}\n          <nav className=\"space-y-2\" role=\"navigation\" aria-label=\"Menu kategorii\">\n            <div className=\"mb-4\">\n              <h3 className=\"text-sm font-semibold text-muted-foreground uppercase tracking-wide mb-2\">\n                <FormattedMessage id=\"nav.categories\" defaultMessage=\"Kategorie\" />\n              </h3>\n            </div>\n            \n            {/* Categories */}\n            {CATEGORIES.map((category) => {\n              const IconComponent = iconMap[category.icon as keyof typeof iconMap] || Atom;\n              const isActive = location.includes(category.id);\n              \n              return (\n                <div key={category.id} className=\"mb-4\">\n                  <Link href={`/${category.id}`}>\n                    <Button\n                      variant={isActive ? \"default\" : \"ghost\"}\n                      className=\"w-full justify-between p-3\"\n                      onClick={closeNav}\n                      aria-label={`Przejdź do sekcji ${category.titlePl}`}\n                      data-testid={`nav-category-${category.id}`}\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        <IconComponent className=\"w-5 h-5\" />\n                        <span className=\"font-medium\">{category.titlePl}</span>\n                      </div>\n                      <ChevronRight className=\"w-4 h-4\" />\n                    </Button>\n                  </Link>\n                  \n                  {/* Topics submenu */}\n                  {isActive && category.topics.length > 0 && (\n                    <div className=\"ml-8 mt-2 space-y-2\">\n                      {category.topics.map((topic) => (\n                        <Link key={topic.id} href={`/${category.id}/${topic.id}`}>\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            className=\"w-full justify-start text-sm text-muted-foreground hover:text-primary\"\n                            onClick={closeNav}\n                            aria-label={`Przejdź do tematu ${topic.titlePl} (czas: ${topic.estimatedTime} minut)`}\n                            data-testid={`nav-topic-${topic.id}`}\n                          >\n                            <div className=\"flex items-center justify-between w-full\">\n                              <span>{topic.titlePl}</span>\n                              <div className=\"flex items-center gap-1 text-xs\">\n                                <Clock className=\"w-3 h-3\" />\n                                <span>{topic.estimatedTime}min</span>\n                              </div>\n                            </div>\n                          </Button>\n                        </Link>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n\n            <Separator className=\"my-4\" />\n\n            {/* Interactive Modules */}\n            <div>\n              <h3 className=\"text-sm font-semibold text-muted-foreground uppercase tracking-wide mb-3\">\n                <FormattedMessage id=\"nav.interactive\" defaultMessage=\"Moduły interaktywne\" />\n              </h3>\n              \n              <Link href=\"/quiz\">\n                <Button\n                  variant=\"ghost\"\n                  className=\"w-full justify-start p-3 mb-2\"\n                  onClick={closeNav}\n                  aria-label=\"Otwórz quiz adaptacyjny\"\n                  data-testid=\"nav-quiz\"\n                >\n                  <Brain className=\"w-5 h-5 mr-3\" />\n                  <FormattedMessage id=\"nav.quiz\" defaultMessage=\"Quiz adaptacyjny\" />\n                </Button>\n              </Link>\n              \n              <Link href=\"/facts\">\n                <Button\n                  variant=\"ghost\"\n                  className=\"w-full justify-start p-3 mb-2\"\n                  onClick={closeNav}\n                  aria-label=\"Zobacz ciekawostkę dnia\"\n                  data-testid=\"nav-facts\"\n                >\n                  <Lightbulb className=\"w-5 h-5 mr-3\" />\n                  <FormattedMessage id=\"nav.facts\" defaultMessage=\"Ciekawostka dnia\" />\n                </Button>\n              </Link>\n              \n              <Link href=\"/scale\">\n                <Button\n                  variant=\"ghost\"\n                  className=\"w-full justify-start p-3\"\n                  onClick={closeNav}\n                  aria-label=\"Otwórz eksplorator skali\"\n                  data-testid=\"nav-scale\"\n                >\n                  <Maximize className=\"w-5 h-5 mr-3\" />\n                  <FormattedMessage id=\"nav.scale\" defaultMessage=\"Zabawa skalą\" />\n                </Button>\n              </Link>\n            </div>\n          </nav>\n        </div>\n      </motion.nav>\n    </>\n  );\n}\n","size_bytes":9614},"client/src/contexts/AppContext.tsx":{"content":"import React, { createContext, useContext, useState, ReactNode } from 'react';\nimport { SimulationState, Language } from '@/types/education';\n\ninterface AppContextType {\n  simulationState: SimulationState;\n  updateSimulation: (key: string, value: any) => void;\n  resetSimulation: () => void;\n}\n\nconst AppContext = createContext<AppContextType | undefined>(undefined);\n\nconst initialSimulationState: SimulationState = {\n  isPlaying: true,\n  voltage: 0,\n  frequency: 50,\n  currentScale: 3,\n};\n\nexport function AppContextProvider({ children }: { children: ReactNode }) {\n  const [simulationState, setSimulationState] = useState<SimulationState>(initialSimulationState);\n\n  const updateSimulation = (key: string, value: any) => {\n    setSimulationState(prev => ({ ...prev, [key]: value }));\n  };\n\n  const resetSimulation = () => {\n    setSimulationState(initialSimulationState);\n  };\n\n  return (\n    <AppContext.Provider value={{ simulationState, updateSimulation, resetSimulation }}>\n      {children}\n    </AppContext.Provider>\n  );\n}\n\nexport function useAppContext() {\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useAppContext must be used within an AppContextProvider');\n  }\n  return context;\n}\n","size_bytes":1244},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useEducationalProgress.ts":{"content":"import { useState, useCallback } from 'react';\nimport { UserProgress } from '@/types/education';\n\nexport function useEducationalProgress() {\n  const [progress, setProgress] = useState<UserProgress[]>([]);\n\n  const updateProgress = useCallback((categoryId: string, topicId: string, completionPercentage: number) => {\n    setProgress(prev => {\n      const existing = prev.find(p => p.categoryId === categoryId && p.topicId === topicId);\n      if (existing) {\n        return prev.map(p => \n          p.categoryId === categoryId && p.topicId === topicId\n            ? { ...p, completionPercentage, completed: completionPercentage >= 100, lastAccessed: new Date() }\n            : p\n        );\n      } else {\n        return [...prev, {\n          categoryId,\n          topicId,\n          completionPercentage,\n          completed: completionPercentage >= 100,\n          lastAccessed: new Date()\n        }];\n      }\n    });\n  }, []);\n\n  const getTopicProgress = useCallback((categoryId: string, topicId: string) => {\n    return progress.find(p => p.categoryId === categoryId && p.topicId === topicId)?.completionPercentage || 0;\n  }, [progress]);\n\n  const getCategoryProgress = useCallback((categoryId: string) => {\n    const categoryProgress = progress.filter(p => p.categoryId === categoryId);\n    if (categoryProgress.length === 0) return 0;\n    \n    const total = categoryProgress.reduce((sum, p) => sum + p.completionPercentage, 0);\n    return Math.round(total / categoryProgress.length);\n  }, [progress]);\n\n  return { progress, updateProgress, getTopicProgress, getCategoryProgress };\n}\n","size_bytes":1585},"client/src/hooks/useTheme.ts":{"content":"import { useState, useEffect } from 'react';\n\nexport function useTheme() {\n  const [theme, setTheme] = useState<'light' | 'dark'>(() => {\n    const saved = localStorage.getItem('theme');\n    return (saved as 'light' | 'dark') || 'dark';\n  });\n\n  useEffect(() => {\n    const root = document.documentElement;\n    root.classList.remove('light', 'dark');\n    root.classList.add(theme);\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\n  };\n\n  return { theme, toggleTheme };\n}\n","size_bytes":570},"client/src/lib/constants.ts":{"content":"import { Category, ScaleLevel, QuizQuestion } from '@/types/education';\n\nexport const CATEGORIES: Category[] = [\n  {\n    id: 'electricity-magnetism',\n    titlePl: 'Elektryczność i magnetyzm',\n    titleEn: 'Electricity and Magnetism',\n    titleHu: 'Elektromosság és mágnesség',\n    icon: 'zap',\n    topics: [\n      {\n        id: 'current-basics',\n        titlePl: 'Czym jest prąd?',\n        titleEn: 'What is Current?',\n        titleHu: 'Mi az áram?',\n        category: {} as Category,\n        estimatedTime: 15,\n        difficulty: 'basic',\n        interactiveModules: ['electron-drift'],\n        mdxContent: 'current-basics'\n      },\n      {\n        id: 'electron-movement',\n        titlePl: 'Czy elektrony w kablu się poruszają?',\n        titleEn: 'Do electrons move in cables?',\n        titleHu: 'Mozognak-e az elektronok a kábelekben?',\n        category: {} as Category,\n        estimatedTime: 20,\n        difficulty: 'basic',\n        interactiveModules: ['billiard-balls'],\n        mdxContent: 'electron-movement'\n      },\n      {\n        id: 'signal-speed',\n        titlePl: 'Skąd więc bierzemy „szybki\" prąd?',\n        titleEn: 'Where does \"fast\" current come from?',\n        titleHu: 'Honnan származik a \"gyors\" áram?',\n        category: {} as Category,\n        estimatedTime: 18,\n        difficulty: 'intermediate',\n        interactiveModules: ['billiard-balls'],\n        mdxContent: 'signal-speed'\n      },\n      {\n        id: 'ac-current',\n        titlePl: 'Prąd w gniazdku',\n        titleEn: 'Current in the Socket',\n        titleHu: 'Áram a konnektorban',\n        category: {} as Category,\n        estimatedTime: 25,\n        difficulty: 'intermediate',\n        interactiveModules: ['ac-current'],\n        mdxContent: 'ac-current'\n      },\n      {\n        id: 'batteries',\n        titlePl: 'Baterie',\n        titleEn: 'Batteries',\n        titleHu: 'Elemek',\n        category: {} as Category,\n        estimatedTime: 20,\n        difficulty: 'basic',\n        interactiveModules: ['circuit-builder'],\n        mdxContent: 'batteries'\n      }\n    ]\n  },\n  {\n    id: 'earth-space',\n    titlePl: 'Ziemia i kosmos',\n    titleEn: 'Earth and Space',\n    titleHu: 'Föld és űr',\n    icon: 'globe',\n    topics: []\n  },\n  {\n    id: 'microworld',\n    titlePl: 'Mikroświat',\n    titleEn: 'Microworld',\n    titleHu: 'Mikrovilág',\n    icon: 'microscope',\n    topics: []\n  },\n  {\n    id: 'perception',\n    titlePl: 'Percepcja i człowiek',\n    titleEn: 'Perception and Human',\n    titleHu: 'Észlelés és ember',\n    icon: 'eye',\n    topics: []\n  }\n];\n\nexport const SCALE_LEVELS: ScaleLevel[] = [\n  { name: 'Quark', size: '10⁻¹⁸ m', description: 'Fundamentalne składniki protonów i neutronów', visualization: 'quark' },\n  { name: 'Proton', size: '10⁻¹⁵ m', description: 'Jądro atomowe składające się z kwarków', visualization: 'proton' },\n  { name: 'Atom', size: '10⁻¹⁰ m', description: 'Najmniejszy atom wodoru', visualization: 'atom' },\n  { name: 'Cząsteczka', size: '10⁻⁹ m', description: 'Cząsteczka wody H₂O', visualization: 'molecule' },\n  { name: 'Wirus', size: '10⁻⁷ m', description: 'Typowy wirus grypy', visualization: 'virus' },\n  { name: 'Komórka', size: '10⁻⁵ m', description: 'Komórka ludzka', visualization: 'cell' },\n  { name: 'Mrówka', size: '10⁻³ m', description: 'Robotnicza mrówka', visualization: 'ant' },\n  { name: 'Człowiek', size: '10⁰ m', description: 'Średni wzrost człowieka', visualization: 'human' },\n  { name: 'Miasto', size: '10⁴ m', description: 'Średnie miasto', visualization: 'city' },\n  { name: 'Ziemia', size: '10⁷ m', description: 'Nasza planeta', visualization: 'earth' },\n  { name: 'Galaktyka', size: '10²¹ m', description: 'Droga Mleczna', visualization: 'galaxy' }\n];\n\nexport const SAMPLE_QUIZ_QUESTIONS: QuizQuestion[] = [\n  {\n    id: 'q1',\n    questionPl: 'Jaka jest typowa prędkość dryfu elektronów w przewodniku domowym?',\n    questionEn: 'What is the typical drift velocity of electrons in a household conductor?',\n    questionHu: 'Mi a tipikus elektronok sodródási sebessége egy háztartási vezetőben?',\n    options: [\n      {\n        id: 'a',\n        textPl: '300,000 km/s (prędkość światła)',\n        textEn: '300,000 km/s (speed of light)',\n        textHu: '300,000 km/s (fénysebesség)'\n      },\n      {\n        id: 'b',\n        textPl: 'Około 0.1 mm/s',\n        textEn: 'About 0.1 mm/s',\n        textHu: 'Körülbelül 0.1 mm/s'\n      },\n      {\n        id: 'c',\n        textPl: '100 m/s',\n        textEn: '100 m/s',\n        textHu: '100 m/s'\n      },\n      {\n        id: 'd',\n        textPl: '1 km/h',\n        textEn: '1 km/h',\n        textHu: '1 km/h'\n      }\n    ],\n    correctAnswer: 'b',\n    explanation: 'Elektrony dryfują bardzo powoli, ale sygnał elektryczny rozchodzi się z prędkością światła.',\n    difficulty: 'medium',\n    topic: 'current-basics'\n  }\n];\n\nexport const LANGUAGES = {\n  pl: { name: 'Polski', flag: '🇵🇱' },\n  en: { name: 'English', flag: '🇬🇧' },\n  hu: { name: 'Magyar', flag: '🇭🇺' }\n};\n\nexport const DAILY_FACTS = [\n  {\n    titlePl: 'Ciekawostka o elektronach',\n    titleEn: 'Electron Fact',\n    titleHu: 'Elektron tény',\n    contentPl: 'Prędkość dryfu elektronów w przewodniku to zaledwie kilka milimetrów na godzinę, ale sygnał elektryczny podróżuje z prędkością światła!',\n    contentEn: 'The drift velocity of electrons in a conductor is only a few millimeters per hour, but the electrical signal travels at the speed of light!',\n    contentHu: 'Az elektronok sodródási sebessége egy vezetőben csak néhány milliméter óránként, de az elektromos jel fénysebességgel utazik!',\n    category: 'electricity'\n  }\n];\n","size_bytes":5736},"client/src/lib/i18n.ts":{"content":"import { createIntl, createIntlCache } from 'react-intl';\n\nexport const messages = {\n  pl: {\n    'nav.home': 'Strona główna',\n    'nav.categories': 'Kategorie',\n    'nav.interactive': 'Moduły interaktywne',\n    'nav.electricity': 'Elektryczność i magnetyzm',\n    'nav.earth': 'Ziemia i kosmos',\n    'nav.micro': 'Mikroświat',\n    'nav.perception': 'Percepcja i człowiek',\n    'nav.quiz': 'Quiz adaptacyjny',\n    'nav.facts': 'Ciekawostka dnia',\n    'nav.scale': 'Zabawa skalą',\n    'daily.fact.title': 'Ciekawostka dnia',\n    'quiz.question': 'Pytanie {current} z {total}',\n    'quiz.next': 'Następne',\n    'quiz.previous': 'Poprzednie',\n    'quiz.progress': 'Twój postęp',\n    'simulation.voltage': 'Napięcie',\n    'simulation.frequency': 'Częstotliwość',\n    'simulation.reset': 'Reset',\n    'simulation.play': 'Odtwórz',\n    'simulation.pause': 'Pauza',\n    'circuit.battery': 'Bateria',\n    'circuit.bulb': 'Żarówka',\n    'circuit.wire': 'Przewód',\n    'circuit.switch': 'Przełącznik',\n    'scale.level': 'Skala',\n    'time.estimate': '~{time} min',\n    'theme.light': 'JASNY',\n    'theme.dark': 'CIEMNY',\n    'error.notFound': 'Strona nie została znaleziona',\n    'error.404': '404 - Strona nie istnieje',\n    'error.devMessage': 'Czy zapomniałeś dodać stronę do routera?',\n    'circuit.remember': 'Pamiętaj - obwód musi być zamknięty, aby popłynął prąd!',\n    'circuit.buildArea': 'Obszar budowy obwodu',\n    'circuit.dragHere': 'Przeciągnij komponenty tutaj',\n    'circuit.toBuild': 'aby zbudować obwód',\n    'circuit.status': 'Status obwodu',\n    'circuit.closed': 'Zamknięty',\n    'circuit.open': 'Otwarty',\n    'circuit.dragComponent': 'Przeciągnij komponent {component} do obszaru budowy obwodu',\n    'billiard.description': 'Analogia z kulkami bilardowymi pomaga zrozumieć, jak natychmiastowy sygnał może powstać przy powolnym ruchu poszczególnych elementów.',\n    'billiard.pushFirst': 'Popchnij pierwszą kulkę',\n  },\n  en: {\n    'nav.home': 'Home',\n    'nav.categories': 'Categories',\n    'nav.interactive': 'Interactive Modules',\n    'nav.electricity': 'Electricity and Magnetism',\n    'nav.earth': 'Earth and Space',\n    'nav.micro': 'Microworld',\n    'nav.perception': 'Perception and Human',\n    'nav.quiz': 'Adaptive Quiz',\n    'nav.facts': 'Daily Fact',\n    'nav.scale': 'Scale Explorer',\n    'daily.fact.title': 'Daily Fact',\n    'quiz.question': 'Question {current} of {total}',\n    'quiz.next': 'Next',\n    'quiz.previous': 'Previous',\n    'quiz.progress': 'Your Progress',\n    'simulation.voltage': 'Voltage',\n    'simulation.frequency': 'Frequency',\n    'simulation.reset': 'Reset',\n    'simulation.play': 'Play',\n    'simulation.pause': 'Pause',\n    'circuit.battery': 'Battery',\n    'circuit.bulb': 'Bulb',\n    'circuit.wire': 'Wire',\n    'circuit.switch': 'Switch',\n    'scale.level': 'Scale',\n    'time.estimate': '~{time} min',\n    'theme.light': 'LIGHT',\n    'theme.dark': 'DARK',\n    'error.notFound': 'Page Not Found',\n    'error.404': '404 - Page Does Not Exist',\n    'error.devMessage': 'Did you forget to add the page to the router?',\n    'circuit.remember': 'Remember - the circuit must be closed for current to flow!',\n    'circuit.buildArea': 'Circuit Construction Area',\n    'circuit.dragHere': 'Drag components here',\n    'circuit.toBuild': 'to build circuit',\n    'circuit.status': 'Circuit Status',\n    'circuit.closed': 'Closed',\n    'circuit.open': 'Open',\n    'circuit.dragComponent': 'Drag {component} component to circuit construction area',\n    'billiard.description': 'The billiard ball analogy helps understand how an instantaneous signal can arise from slow movement of individual elements.',\n    'billiard.pushFirst': 'Push the first ball',\n  },\n  hu: {\n    'nav.home': 'Főoldal',\n    'nav.categories': 'Kategóriák',\n    'nav.interactive': 'Interaktív modulok',\n    'nav.electricity': 'Elektromosság és mágnesség',\n    'nav.earth': 'Föld és űr',\n    'nav.micro': 'Mikrovilág',\n    'nav.perception': 'Észlelés és ember',\n    'nav.quiz': 'Adaptív kvíz',\n    'nav.facts': 'Napi tény',\n    'nav.scale': 'Méretarány felfedező',\n    'daily.fact.title': 'Napi tény',\n    'quiz.question': '{current}. kérdés {total}-ból',\n    'quiz.next': 'Következő',\n    'quiz.previous': 'Előző',\n    'quiz.progress': 'Az Ön előrehaladása',\n    'simulation.voltage': 'Feszültség',\n    'simulation.frequency': 'Frekvencia',\n    'simulation.reset': 'Visszaállítás',\n    'simulation.play': 'Lejátszás',\n    'simulation.pause': 'Szünet',\n    'circuit.battery': 'Elem',\n    'circuit.bulb': 'Izzó',\n    'circuit.wire': 'Vezeték',\n    'circuit.switch': 'Kapcsoló',\n    'scale.level': 'Méretarány',\n    'time.estimate': '~{time} perc',\n    'theme.light': 'VILÁGOS',\n    'theme.dark': 'SÖTÉT',\n    'error.notFound': 'Az oldal nem található',\n    'error.404': '404 - Az oldal nem létezik',\n    'error.devMessage': 'Elfelejtette hozzáadni az oldalt a router-hez?',\n    'circuit.remember': 'Emlékezzen - az áramkörnek zártnak kell lennie, hogy áram folyjon!',\n    'circuit.buildArea': 'Áramkör építési terület',\n    'circuit.dragHere': 'Húzza ide a komponenseket',\n    'circuit.toBuild': 'áramkör építéséhez',\n    'circuit.status': 'Áramkör állapota',\n    'circuit.closed': 'Zárt',\n    'circuit.open': 'Nyitott',\n    'circuit.dragComponent': 'Húzza a(z) {component} komponenst az áramkör építési területre',\n    'billiard.description': 'A biliárd golyó analógia segít megérteni, hogyan keletkezhet azonnali jel az egyes elemek lassú mozgásából.',\n    'billiard.pushFirst': 'Tolja meg az első golyót',\n  }\n};\n\nconst cache = createIntlCache();\n\nexport const createAppIntl = (locale: string) => {\n  return createIntl({\n    locale,\n    messages: messages[locale as keyof typeof messages] || messages.pl,\n  }, cache);\n};\n","size_bytes":5873},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/EarthSpace.tsx":{"content":"import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Globe, Clock, Bookmark } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { DailyFact } from '@/components/DailyFact';\nimport { Language } from '@/types/education';\n\ninterface EarthSpaceProps {\n  language: Language;\n}\n\nexport default function EarthSpace({ language }: EarthSpaceProps) {\n  return (\n    <div className=\"min-h-screen transition-all duration-300 ease-in-out\" data-testid=\"earth-space-page\">\n      {/* Header */}\n      <motion.header \n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-card border-b border-border py-6 px-6 lg:px-12\"\n      >\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"ml-16 lg:ml-0\">\n              <h1 className=\"text-3xl lg:text-4xl font-bold text-foreground\">\n                Ziemia i kosmos\n              </h1>\n              <p className=\"text-muted-foreground mt-2\">\n                Odkryj tajniki naszej planety i wszechświata\n              </p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"hidden md:flex items-center gap-2 bg-muted rounded-lg p-2\">\n                <Clock className=\"w-4 h-4 text-muted-foreground\" />\n                <span className=\"text-sm text-muted-foreground\">~30 min</span>\n              </div>\n              <Button variant=\"outline\" size=\"sm\">\n                <Bookmark className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </motion.header>\n\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-12 py-8 space-y-12\">\n        {/* Daily Fact */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.1 }}\n        >\n          <DailyFact language={language} />\n        </motion.div>\n\n        {/* Coming Soon Message */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n          className=\"text-center py-16\"\n        >\n          <Globe className=\"w-24 h-24 text-primary mx-auto mb-6\" />\n          <h2 className=\"text-2xl font-bold text-foreground mb-4\">\n            Ta sekcja jest w przygotowaniu\n          </h2>\n          <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n            Wkrótce znajdziesz tutaj fascynujące treści o porach roku, grawitacji, \n            i cyklach dnia i nocy. Sprawdź inne sekcje w międzyczasie!\n          </p>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":2689},"client/src/pages/ElectricityMagnetism.tsx":{"content":"import React from 'react';\nimport { Link } from 'wouter';\nimport { motion } from 'framer-motion';\nimport { FormattedMessage } from 'react-intl';\nimport { Clock, Bookmark, ChevronRight } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { DailyFact } from '@/components/DailyFact';\nimport { ElectronDrift } from '@/components/InteractiveModules/ElectronDrift';\nimport { BilliardBalls } from '@/components/InteractiveModules/BilliardBalls';\nimport { ACCurrent } from '@/components/InteractiveModules/ACCurrent';\nimport { CircuitBuilder } from '@/components/InteractiveModules/CircuitBuilder';\nimport { Language } from '@/types/education';\nimport { CATEGORIES } from '@/lib/constants';\n\ninterface ElectricityMagnetismProps {\n  language: Language;\n}\n\nexport default function ElectricityMagnetism({ language }: ElectricityMagnetismProps) {\n  const category = CATEGORIES.find(c => c.id === 'electricity-magnetism')!;\n\n  return (\n    <div className=\"min-h-screen transition-all duration-300 ease-in-out\" data-testid=\"electricity-page\">\n      {/* Header */}\n      <motion.header \n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-card border-b border-border py-6 px-6 lg:px-12\"\n      >\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"ml-16 lg:ml-0\">\n              <h1 className=\"text-3xl lg:text-4xl font-bold text-foreground\">\n                {category.titlePl}\n              </h1>\n              <p className=\"text-muted-foreground mt-2\">\n                Poznaj tajniki przepływu prądu i zachowania elektronów\n              </p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"hidden md:flex items-center gap-2 bg-muted rounded-lg p-2\">\n                <Clock className=\"w-4 h-4 text-muted-foreground\" />\n                <span className=\"text-sm text-muted-foreground\">~45 min</span>\n              </div>\n              <Button variant=\"outline\" size=\"sm\">\n                <Bookmark className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </motion.header>\n\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-12 py-8 space-y-12\">\n        {/* Daily Fact */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.1 }}\n        >\n          <DailyFact language={language} />\n        </motion.div>\n\n        {/* Section 1: What is Current? */}\n        <motion.section \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n          id=\"current\" \n          className=\"space-y-8\"\n        >\n          <div className=\"prose prose-lg max-w-none prose-invert\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-6\">\n              Czym jest prąd elektryczny?\n            </h2>\n            <div className=\"grid lg:grid-cols-2 gap-8 items-start\">\n              <div>\n                <p className=\"text-lg text-muted-foreground mb-6\">\n                  Prąd elektryczny to uporządkowany ruch elektronów swobodnych w przewodniku. \n                  W metalach elektrony mogą się swobodnie przemieszczać między atomami, \n                  tworząc \"morze elektronów\".\n                </p>\n                <div className=\"bg-muted p-4 rounded-lg\">\n                  <h4 className=\"font-semibold text-foreground mb-2\">Kluczowe pojęcia:</h4>\n                  <ul className=\"space-y-2 text-muted-foreground\">\n                    <li>• Elektrony swobodne - mogą się poruszać</li>\n                    <li>• Przewodnik - materiał z elektronami swobodnymi</li>\n                    <li>• Prąd - uporządkowany ruch elektronów</li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"bg-muted rounded-lg p-6 h-64 flex items-center justify-center\">\n                <div className=\"text-center text-muted-foreground\">\n                  <div className=\"w-16 h-16 bg-primary rounded-lg mx-auto mb-4 flex items-center justify-center\">\n                    <div className=\"w-8 h-8 bg-accent rounded-full\"></div>\n                  </div>\n                  <p className=\"text-sm\">Wizualizacja struktury metalicznej</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.section>\n\n        {/* Interactive Module 1: Electron Drift */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.3 }}\n        >\n          <ElectronDrift />\n        </motion.div>\n\n        {/* Section 2: Do electrons move? */}\n        <motion.section \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.4 }}\n          id=\"electrons\" \n          className=\"space-y-8\"\n        >\n          <div className=\"prose prose-lg max-w-none prose-invert\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-6\">\n              Czy elektrony w kablu się poruszają?\n            </h2>\n            \n            <div className=\"grid lg:grid-cols-3 gap-6\">\n              <div className=\"lg:col-span-2\">\n                <p className=\"text-lg text-muted-foreground mb-4\">\n                  To częste nieporozumienie! Elektrony rzeczywiście się poruszają, ale bardzo powoli. \n                  Bez napięcia wykonują chaotyczny ruch cieplny, a z napięciem powoli dryfują w kierunku bieguna dodatniego.\n                </p>\n                \n                <div className=\"bg-card p-6 rounded-lg border border-border\">\n                  <h4 className=\"font-semibold text-card-foreground mb-3\">Prędkość dryfu elektronów:</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between items-center p-3 bg-muted rounded\">\n                      <span>Typowy przewód domowy:</span>\n                      <Badge variant=\"secondary\">~0.1 mm/s</Badge>\n                    </div>\n                    <div className=\"flex justify-between items-center p-3 bg-muted rounded\">\n                      <span>To znaczy na godzinę:</span>\n                      <Badge variant=\"secondary\">~36 cm</Badge>\n                    </div>\n                    <div className=\"flex justify-between items-center p-3 bg-muted rounded\">\n                      <span>Prędkość sygnału:</span>\n                      <Badge variant=\"default\">~300,000 km/s</Badge>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"bg-muted rounded-lg p-6 h-64 flex items-center justify-center\">\n                <div className=\"text-center text-muted-foreground\">\n                  <div className=\"w-16 h-16 bg-secondary rounded-lg mx-auto mb-4 flex items-center justify-center\">\n                    <div className=\"w-8 h-8 bg-accent rounded-full animate-pulse\"></div>\n                  </div>\n                  <p className=\"text-sm\">Reprezentacja ruchu elektronów</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.section>\n\n        {/* Interactive Module 2: Billiard Balls */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.5 }}\n        >\n          <BilliardBalls />\n        </motion.div>\n\n        {/* Section 3: AC Current */}\n        <motion.section \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.6 }}\n          id=\"ac-current\" \n          className=\"space-y-8\"\n        >\n          <div className=\"prose prose-lg max-w-none prose-invert\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-6\">\n              Prąd zmienny w gniazdku\n            </h2>\n            \n            <div className=\"grid lg:grid-cols-2 gap-8\">\n              <div>\n                <p className=\"text-lg text-muted-foreground mb-4\">\n                  W gniazdku domowym mamy prąd zmienny - elektrony nie płyną w jednym kierunku, \n                  lecz drgają tam i z powrotem 50 razy na sekundę (50 Hz w Europie).\n                </p>\n                \n                <div className=\"bg-card p-6 rounded-lg border border-border\">\n                  <h4 className=\"font-semibold text-card-foreground mb-3\">Charakterystyka prądu zmiennego:</h4>\n                  <ul className=\"space-y-2 text-muted-foreground\">\n                    <li className=\"flex items-center gap-2\">\n                      <div className=\"w-2 h-2 bg-primary rounded-full\"></div>\n                      Częstotliwość: 50 Hz (Europa) / 60 Hz (USA)\n                    </li>\n                    <li className=\"flex items-center gap-2\">\n                      <div className=\"w-2 h-2 bg-primary rounded-full\"></div>\n                      Napięcie skuteczne: 230V\n                    </li>\n                    <li className=\"flex items-center gap-2\">\n                      <div className=\"w-2 h-2 bg-primary rounded-full\"></div>\n                      Energia: fala elektromagnetyczna\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              \n              <div className=\"bg-muted rounded-lg p-6 h-64 flex items-center justify-center\">\n                <div className=\"text-center text-muted-foreground\">\n                  <div className=\"w-16 h-16 bg-blue-600 rounded-lg mx-auto mb-4 flex items-center justify-center\">\n                    <div className=\"w-8 h-8 bg-yellow-400 rounded-full\"></div>\n                  </div>\n                  <p className=\"text-sm\">Sieć elektroenergetyczna</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.section>\n\n        {/* Interactive Module 3: AC Current Visualization */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.7 }}\n        >\n          <ACCurrent />\n        </motion.div>\n\n        {/* Interactive Module 4: Circuit Builder */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.8 }}\n        >\n          <CircuitBuilder />\n        </motion.div>\n\n        {/* Navigation to other sections */}\n        <motion.section \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.9 }}\n          className=\"bg-gradient-to-r from-blue-900 to-purple-900 rounded-xl p-8 text-white\"\n        >\n          <div className=\"flex items-center gap-3 mb-6\">\n            <div className=\"p-2 bg-white bg-opacity-20 rounded-lg\">\n              <ChevronRight className=\"w-6 h-6\" />\n            </div>\n            <h2 className=\"text-3xl font-bold\">Następny temat</h2>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-8 items-center\">\n            <div>\n              <h3 className=\"text-xl font-semibold mb-4\">Ziemia i kosmos</h3>\n              <p className=\"text-blue-100 mb-6\">\n                Odkryj prawdziwą przyczynę zmian pór roku, poznaj działanie grawitacji w teorii względności \n                i zrozum, dlaczego Słońce wschodzi i zachodzi.\n              </p>\n              \n              <Link href=\"/earth-space\">\n                <Button \n                  variant=\"secondary\" \n                  className=\"bg-white text-blue-900 hover:bg-blue-50\"\n                  data-testid=\"next-earth-space\"\n                >\n                  Przejdź do Ziemia i kosmos\n                  <ChevronRight className=\"w-4 h-4 ml-2\" />\n                </Button>\n              </Link>\n            </div>\n\n            <div className=\"relative\">\n              <div className=\"w-64 h-64 mx-auto relative bg-black bg-opacity-30 rounded-full border border-white border-opacity-30 flex items-center justify-center\">\n                <div className=\"w-16 h-16 bg-yellow-400 rounded-full shadow-lg\"></div>\n                <div className=\"absolute w-3 h-3 bg-blue-400 rounded-full earth-orbit\" style={{transformOrigin: \"-80px center\"}}></div>\n                <div className=\"absolute w-40 h-40 border border-white border-opacity-30 rounded-full\"></div>\n              </div>\n              <p className=\"text-center text-sm text-blue-200 mt-4\">\n                Model ruchu Ziemi wokół Słońca\n              </p>\n            </div>\n          </div>\n        </motion.section>\n      </div>\n    </div>\n  );\n}\n","size_bytes":12711},"client/src/pages/Facts.tsx":{"content":"import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Lightbulb, Clock, RefreshCw } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { DailyFact } from '@/components/DailyFact';\nimport { Language } from '@/types/education';\nimport { DAILY_FACTS } from '@/lib/constants';\n\ninterface FactsProps {\n  language: Language;\n}\n\nexport default function Facts({ language }: FactsProps) {\n  const [currentFactIndex, setCurrentFactIndex] = React.useState(0);\n\n  const getRandomFact = () => {\n    const randomIndex = Math.floor(Math.random() * DAILY_FACTS.length);\n    setCurrentFactIndex(randomIndex);\n  };\n\n  return (\n    <div className=\"min-h-screen transition-all duration-300 ease-in-out\" data-testid=\"facts-page\">\n      {/* Header */}\n      <motion.header \n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-card border-b border-border py-6 px-6 lg:px-12\"\n      >\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"ml-16 lg:ml-0\">\n              <h1 className=\"text-3xl lg:text-4xl font-bold text-foreground\">\n                Ciekawostki fizyczne\n              </h1>\n              <p className=\"text-muted-foreground mt-2\">\n                Fascynujące fakty z świata nauki\n              </p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <Button \n                variant=\"outline\" \n                onClick={getRandomFact}\n                className=\"flex items-center gap-2\"\n                data-testid=\"random-fact-button\"\n              >\n                <RefreshCw className=\"w-4 h-4\" />\n                Losowa ciekawostka\n              </Button>\n            </div>\n          </div>\n        </div>\n      </motion.header>\n\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-12 py-8 space-y-12\">\n        {/* Main Daily Fact */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.1 }}\n        >\n          <DailyFact language={language} />\n        </motion.div>\n\n        {/* Fact Archive */}\n        <motion.section\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n          className=\"space-y-6\"\n        >\n          <h2 className=\"text-2xl font-bold text-foreground\">\n            Archiwum ciekawostek\n          </h2>\n          \n          <div className=\"grid gap-6\">\n            {DAILY_FACTS.map((fact, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.1 * index }}\n              >\n                <Card className=\"hover:border-accent transition-colors\">\n                  <CardHeader>\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"p-2 bg-primary rounded-lg\">\n                        <Lightbulb className=\"w-5 h-5 text-primary-foreground\" />\n                      </div>\n                      <CardTitle className=\"text-lg\">\n                        {language === 'en' ? fact.titleEn : \n                         language === 'hu' ? fact.titleHu : fact.titlePl}\n                      </CardTitle>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-muted-foreground\">\n                      {language === 'en' ? fact.contentEn : \n                       language === 'hu' ? fact.contentHu : fact.contentPl}\n                    </p>\n                    <div className=\"mt-4 inline-flex px-3 py-1 bg-muted rounded-full text-xs text-muted-foreground\">\n                      Kategoria: {fact.category}\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </motion.section>\n\n        {/* Fun Facts Grid */}\n        <motion.section\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.3 }}\n          className=\"space-y-6\"\n        >\n          <h2 className=\"text-2xl font-bold text-foreground\">\n            Szybkie fakty\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {[\n              { fact: \"Prędkość światła: 299,792,458 m/s\", icon: \"⚡\" },\n              { fact: \"Elektrony w atomie nie orbitują\", icon: \"⚛️\" },\n              { fact: \"Ziemia obraca się z prędkością 1670 km/h\", icon: \"🌍\" },\n              { fact: \"Punkt wrzenia zależy od ciśnienia\", icon: \"💧\" }\n            ].map((item, index) => (\n              <Card key={index} className=\"text-center\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"text-3xl mb-3\">{item.icon}</div>\n                  <p className=\"text-sm text-muted-foreground\">{item.fact}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </motion.section>\n      </div>\n    </div>\n  );\n}\n","size_bytes":5268},"client/src/pages/Home.tsx":{"content":"import React from 'react';\nimport { Link } from 'wouter';\nimport { FormattedMessage } from 'react-intl';\nimport { motion } from 'framer-motion';\nimport heroImage from '@assets/generated_images/Interactive_physics_learning_hero_dc15d5c5.png';\nimport { \n  Zap, \n  Globe, \n  Microscope, \n  Eye, \n  Clock, \n  MousePointer, \n  Move3d, \n  BarChart3, \n  Lightbulb, \n  Map,\n  Shuffle,\n  ChevronRight\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { DailyFact } from '@/components/DailyFact';\nimport { ScaleExplorer } from '@/components/InteractiveModules/ScaleExplorer';\nimport { Language } from '@/types/education';\n\ninterface HomeProps {\n  language: Language;\n}\n\nexport default function Home({ language }: HomeProps) {\n  const topics = [\n    {\n      id: 'seasons',\n      title: 'Pory roku',\n      description: 'Model 3D pokazujący wpływ nachylenia osi Ziemi na pory roku',\n      icon: <div className=\"p-2 bg-blue-600 rounded-lg\"><Globe className=\"w-5 h-5 text-white\" /></div>,\n      feature: 'Interaktywny model 3D',\n      featureIcon: <MousePointer className=\"w-3 h-3\" />\n    },\n    {\n      id: 'gravity',\n      title: 'Grawitacja',\n      description: 'Symulacja zakrzywienia czasoprzestrzeni przez obiekty o różnej masie',\n      icon: <div className=\"p-2 bg-purple-600 rounded-lg\"><Globe className=\"w-5 h-5 text-white\" /></div>,\n      feature: 'Symulacja czasoprzestrzeni',\n      featureIcon: <Move3d className=\"w-3 h-3\" />\n    },\n    {\n      id: 'boiling',\n      title: 'Wrzenie wody',\n      description: 'Dynamiczne wykresy ciśnienia pary wodnej vs temperatura',\n      icon: <div className=\"p-2 bg-cyan-600 rounded-lg\"><Microscope className=\"w-5 h-5 text-white\" /></div>,\n      feature: 'Interaktywne wykresy',\n      featureIcon: <BarChart3 className=\"w-3 h-3\" />\n    },\n    {\n      id: 'color',\n      title: 'Kolor obiektów',\n      description: 'Eksperyment z oświetlaniem obiektów światłem różnych kolorów',\n      icon: <div className=\"p-2 bg-red-600 rounded-lg\"><Eye className=\"w-5 h-5 text-white\" /></div>,\n      feature: 'Eksperyment wirtualny',\n      featureIcon: <Lightbulb className=\"w-3 h-3\" />\n    },\n    {\n      id: 'taste',\n      title: 'Smak języka',\n      description: 'Interaktywna mapa języka pokazująca prawdziwą dystrybucję receptorów smaku',\n      icon: <div className=\"p-2 bg-green-600 rounded-lg\"><Eye className=\"w-5 h-5 text-white\" /></div>,\n      feature: 'Mapa interaktywna',\n      featureIcon: <Map className=\"w-3 h-3\" />\n    },\n    {\n      id: 'atoms',\n      title: 'Struktura atomu',\n      description: 'Porównanie klasycznego modelu planetarnego z kwantowym modelem chmury prawdopodobieństwa',\n      icon: <div className=\"p-2 bg-indigo-600 rounded-lg\"><Microscope className=\"w-5 h-5 text-white\" /></div>,\n      feature: 'Porównanie modeli',\n      featureIcon: <Shuffle className=\"w-3 h-3\" />\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen transition-all duration-300 ease-in-out\" data-testid=\"home-page\">\n      {/* Header */}\n      <motion.header \n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-card border-b border-border py-6 px-6 lg:px-12\"\n      >\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"ml-16 lg:ml-0\">\n              <h1 className=\"text-3xl lg:text-4xl font-bold text-foreground\">\n                Interaktywna Nauka\n              </h1>\n              <p className=\"text-muted-foreground mt-2\">\n                Odkryj tajniki fizyki przez interaktywne eksperymenty i symulacje\n              </p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"hidden md:flex items-center gap-2 bg-muted rounded-lg p-2\">\n                <Clock className=\"w-4 h-4 text-muted-foreground\" />\n                <span className=\"text-sm text-muted-foreground\">Pełny kurs ~4h</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </motion.header>\n\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-12 py-8 space-y-12\">\n        {/* Daily Fact */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.1 }}\n        >\n          <DailyFact language={language} />\n        </motion.div>\n\n        {/* Featured Section - Electricity and Magnetism */}\n        <motion.section\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n          className=\"space-y-8\"\n        >\n          <div className=\"flex items-center justify-between\">\n            <h2 className=\"text-3xl font-bold text-foreground\">\n              Polecane: Elektryczność i magnetyzm\n            </h2>\n            <Link href=\"/electricity-magnetism\">\n              <Button \n                variant=\"outline\" \n                className=\"flex items-center gap-2\"\n                data-testid=\"view-all-electricity\"\n              >\n                Zobacz wszystko\n                <ChevronRight className=\"w-4 h-4\" />\n              </Button>\n            </Link>\n          </div>\n\n          <div className=\"bg-gradient-to-r from-accent to-primary p-8 rounded-xl text-accent-foreground\">\n            <div className=\"grid lg:grid-cols-2 gap-8 items-center\">\n              <div>\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <div className=\"p-2 bg-black bg-opacity-20 rounded-lg\">\n                    <Zap className=\"w-6 h-6\" />\n                  </div>\n                  <h3 className=\"text-2xl font-bold\">Czym jest prąd elektryczny?</h3>\n                </div>\n                <p className=\"text-accent-foreground opacity-90 mb-6\">\n                  Poznaj prawdziwą naturę prądu elektrycznego. Dowiedz się, dlaczego elektrony poruszają się \n                  powoli, ale sygnał jest błyskawiczny, i jak działa prąd zmienny w twoim domu.\n                </p>\n                <div className=\"flex gap-4\">\n                  <Link href=\"/electricity-magnetism/current-basics\">\n                    <Button \n                      variant=\"secondary\" \n                      className=\"bg-white text-primary hover:bg-gray-100\"\n                      data-testid=\"start-current-basics\"\n                    >\n                      Rozpocznij naukę\n                    </Button>\n                  </Link>\n                  <Link href=\"/electricity-magnetism\">\n                    <Button \n                      variant=\"outline\" \n                      className=\"border-white text-white hover:bg-white hover:text-primary\"\n                      data-testid=\"explore-electricity\"\n                    >\n                      Eksploruj wszystkie tematy\n                    </Button>\n                  </Link>\n                </div>\n              </div>\n              <div className=\"relative\">\n                {/* Placeholder for electron animation preview */}\n                <div className=\"w-full h-48 bg-black bg-opacity-20 rounded-lg flex items-center justify-center\">\n                  <div className=\"text-center\">\n                    <Zap className=\"w-12 h-12 mx-auto mb-2\" />\n                    <p className=\"text-sm\">Interaktywna symulacja elektronów</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.section>\n\n        {/* Scale Explorer Preview */}\n        <motion.section\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.3 }}\n        >\n          <ScaleExplorer />\n        </motion.section>\n\n        {/* Other Topics Grid */}\n        <motion.section\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.4 }}\n          className=\"space-y-8\"\n        >\n          <h2 className=\"text-3xl font-bold text-foreground\">\n            Inne tematy do eksploracji\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {topics.map((topic, index) => (\n              <motion.div\n                key={topic.id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.1 * index }}\n              >\n                <Card className=\"hover:border-accent transition-colors cursor-pointer group\">\n                  <CardHeader>\n                    <div className=\"flex items-center gap-3 mb-4\">\n                      {topic.icon}\n                      <CardTitle className=\"text-lg\">{topic.title}</CardTitle>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"h-32 bg-muted rounded-lg mb-4 flex items-center justify-center\">\n                      <div className=\"text-center text-muted-foreground\">\n                        <div className=\"w-12 h-12 bg-primary rounded-lg mx-auto mb-2 flex items-center justify-center\">\n                          <Lightbulb className=\"w-6 h-6 text-primary-foreground\" />\n                        </div>\n                        <p className=\"text-sm\">Moduł interaktywny</p>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground mb-4\">\n                      {topic.description}\n                    </p>\n                    <div className=\"flex items-center gap-2 text-xs text-accent\">\n                      {topic.featureIcon}\n                      <span>{topic.feature}</span>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </motion.section>\n\n        {/* Quick Access to Interactive Modules */}\n        <motion.section\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.5 }}\n          className=\"bg-card rounded-xl p-8 border border-border\"\n        >\n          <h3 className=\"text-2xl font-bold text-card-foreground mb-6\">\n            Moduły interaktywne\n          </h3>\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <Link href=\"/quiz\">\n              <Card className=\"hover:border-accent transition-colors cursor-pointer\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"flex items-center gap-3 mb-4\">\n                    <div className=\"p-2 bg-primary rounded-lg\">\n                      <Zap className=\"w-5 h-5 text-primary-foreground\" />\n                    </div>\n                    <h4 className=\"font-semibold\">Quiz adaptacyjny</h4>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Test wiedzy dostosowujący się do Twojego poziomu\n                  </p>\n                </CardContent>\n              </Card>\n            </Link>\n\n            <Link href=\"/facts\">\n              <Card className=\"hover:border-accent transition-colors cursor-pointer\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"flex items-center gap-3 mb-4\">\n                    <div className=\"p-2 bg-accent rounded-lg\">\n                      <Lightbulb className=\"w-5 h-5 text-accent-foreground\" />\n                    </div>\n                    <h4 className=\"font-semibold\">Ciekawostka dnia</h4>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Codziennie nowa fascynująca informacja z fizyki\n                  </p>\n                </CardContent>\n              </Card>\n            </Link>\n\n            <Link href=\"/scale\">\n              <Card className=\"hover:border-accent transition-colors cursor-pointer\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"flex items-center gap-3 mb-4\">\n                    <div className=\"p-2 bg-secondary rounded-lg\">\n                      <Microscope className=\"w-5 h-5 text-secondary-foreground\" />\n                    </div>\n                    <h4 className=\"font-semibold\">Zabawa skalą</h4>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Podróż od atomów do galaktyk w jednej symulacji\n                  </p>\n                </CardContent>\n              </Card>\n            </Link>\n          </div>\n        </motion.section>\n      </div>\n    </div>\n  );\n}\n","size_bytes":12569},"client/src/pages/Microworld.tsx":{"content":"import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Microscope, Clock, Bookmark } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { DailyFact } from '@/components/DailyFact';\nimport { Language } from '@/types/education';\n\ninterface MicroworldProps {\n  language: Language;\n}\n\nexport default function Microworld({ language }: MicroworldProps) {\n  return (\n    <div className=\"min-h-screen transition-all duration-300 ease-in-out\" data-testid=\"microworld-page\">\n      {/* Header */}\n      <motion.header \n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-card border-b border-border py-6 px-6 lg:px-12\"\n      >\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"ml-16 lg:ml-0\">\n              <h1 className=\"text-3xl lg:text-4xl font-bold text-foreground\">\n                Mikroświat\n              </h1>\n              <p className=\"text-muted-foreground mt-2\">\n                Zanurz się w świecie atomów, cząsteczek i zjawisk molekularnych\n              </p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"hidden md:flex items-center gap-2 bg-muted rounded-lg p-2\">\n                <Clock className=\"w-4 h-4 text-muted-foreground\" />\n                <span className=\"text-sm text-muted-foreground\">~40 min</span>\n              </div>\n              <Button variant=\"outline\" size=\"sm\">\n                <Bookmark className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </motion.header>\n\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-12 py-8 space-y-12\">\n        {/* Daily Fact */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.1 }}\n        >\n          <DailyFact language={language} />\n        </motion.div>\n\n        {/* Coming Soon Message */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n          className=\"text-center py-16\"\n        >\n          <Microscope className=\"w-24 h-24 text-primary mx-auto mb-6\" />\n          <h2 className=\"text-2xl font-bold text-foreground mb-4\">\n            Mikroświat w przygotowaniu\n          </h2>\n          <p className=\"text-muted-foreground max-w-2xl mx-auto mb-8\">\n            Wkrótce znajdziesz tutaj interaktywne moduły o cząsteczkach wody we wrzątku, \n            kolorach obiektów i strukturze atomów. Sprawdź inne sekcje w międzyczasie!\n          </p>\n          \n          <div className=\"grid md:grid-cols-3 gap-6 max-w-4xl mx-auto\">\n            <div className=\"bg-card p-6 rounded-lg border border-border\">\n              <h3 className=\"font-semibold text-card-foreground mb-2\">Cząsteczki wody</h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Ciśnienie pary wodnej i punkt wrzenia\n              </p>\n            </div>\n            <div className=\"bg-card p-6 rounded-lg border border-border\">\n              <h3 className=\"font-semibold text-card-foreground mb-2\">Kolor obiektów</h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Jak obiekty odbijają i pochłaniają światło\n              </p>\n            </div>\n            <div className=\"bg-card p-6 rounded-lg border border-border\">\n              <h3 className=\"font-semibold text-card-foreground mb-2\">Atomy</h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Kwantowy model vs model planetarny\n              </p>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3793},"client/src/pages/Perception.tsx":{"content":"import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Eye, Clock, Bookmark } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { DailyFact } from '@/components/DailyFact';\nimport { Language } from '@/types/education';\n\ninterface PerceptionProps {\n  language: Language;\n}\n\nexport default function Perception({ language }: PerceptionProps) {\n  return (\n    <div className=\"min-h-screen transition-all duration-300 ease-in-out\" data-testid=\"perception-page\">\n      {/* Header */}\n      <motion.header \n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-card border-b border-border py-6 px-6 lg:px-12\"\n      >\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"ml-16 lg:ml-0\">\n              <h1 className=\"text-3xl lg:text-4xl font-bold text-foreground\">\n                Percepcja i człowiek\n              </h1>\n              <p className=\"text-muted-foreground mt-2\">\n                Odkryj jak działają nasze zmysły i jak mózg interpretuje świat\n              </p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"hidden md:flex items-center gap-2 bg-muted rounded-lg p-2\">\n                <Clock className=\"w-4 h-4 text-muted-foreground\" />\n                <span className=\"text-sm text-muted-foreground\">~35 min</span>\n              </div>\n              <Button variant=\"outline\" size=\"sm\">\n                <Bookmark className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </motion.header>\n\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-12 py-8 space-y-12\">\n        {/* Daily Fact */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.1 }}\n        >\n          <DailyFact language={language} />\n        </motion.div>\n\n        {/* Coming Soon Message */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n          className=\"text-center py-16\"\n        >\n          <Eye className=\"w-24 h-24 text-primary mx-auto mb-6\" />\n          <h2 className=\"text-2xl font-bold text-foreground mb-4\">\n            Percepcja i człowiek w przygotowaniu\n          </h2>\n          <p className=\"text-muted-foreground max-w-2xl mx-auto mb-8\">\n            Wkrótce znajdziesz tutaj fascynujące treści o smaku języka, \n            widzeniu barw i sile wyporu. Sprawdź inne sekcje w międzyczasie!\n          </p>\n          \n          <div className=\"grid md:grid-cols-3 gap-6 max-w-4xl mx-auto\">\n            <div className=\"bg-card p-6 rounded-lg border border-border\">\n              <h3 className=\"font-semibold text-card-foreground mb-2\">Smak języka</h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Prawdziwa mapa receptorów smaku\n              </p>\n            </div>\n            <div className=\"bg-card p-6 rounded-lg border border-border\">\n              <h3 className=\"font-semibold text-card-foreground mb-2\">Widzenie barw</h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Jak oko i mózg interpretują światło\n              </p>\n            </div>\n            <div className=\"bg-card p-6 rounded-lg border border-border\">\n              <h3 className=\"font-semibold text-card-foreground mb-2\">Ciężar w wodzie</h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Siła wyporu i pozorna utrata masy\n              </p>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3762},"client/src/pages/Quiz.tsx":{"content":"import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Brain, Clock } from 'lucide-react';\nimport { DailyFact } from '@/components/DailyFact';\nimport { AdaptiveQuiz } from '@/components/InteractiveModules/AdaptiveQuiz';\nimport { Language } from '@/types/education';\n\ninterface QuizProps {\n  language: Language;\n}\n\nexport default function Quiz({ language }: QuizProps) {\n  return (\n    <div className=\"min-h-screen transition-all duration-300 ease-in-out\" data-testid=\"quiz-page\">\n      {/* Header */}\n      <motion.header \n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-card border-b border-border py-6 px-6 lg:px-12\"\n      >\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"ml-16 lg:ml-0\">\n              <h1 className=\"text-3xl lg:text-4xl font-bold text-foreground\">\n                Quiz adaptacyjny\n              </h1>\n              <p className=\"text-muted-foreground mt-2\">\n                Test wiedzy dostosowujący się do Twojego poziomu\n              </p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"hidden md:flex items-center gap-2 bg-muted rounded-lg p-2\">\n                <Clock className=\"w-4 h-4 text-muted-foreground\" />\n                <span className=\"text-sm text-muted-foreground\">~15 min</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </motion.header>\n\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-12 py-8 space-y-12\">\n        {/* Daily Fact */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.1 }}\n        >\n          <DailyFact language={language} />\n        </motion.div>\n\n        {/* Adaptive Quiz */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n        >\n          <AdaptiveQuiz language={language} />\n        </motion.div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":2130},"client/src/pages/Scale.tsx":{"content":"import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Maximize, Clock } from 'lucide-react';\nimport { DailyFact } from '@/components/DailyFact';\nimport { ScaleExplorer } from '@/components/InteractiveModules/ScaleExplorer';\nimport { Language } from '@/types/education';\n\ninterface ScaleProps {\n  language: Language;\n}\n\nexport default function Scale({ language }: ScaleProps) {\n  return (\n    <div className=\"min-h-screen transition-all duration-300 ease-in-out\" data-testid=\"scale-page\">\n      {/* Header */}\n      <motion.header \n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-card border-b border-border py-6 px-6 lg:px-12\"\n      >\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"ml-16 lg:ml-0\">\n              <h1 className=\"text-3xl lg:text-4xl font-bold text-foreground\">\n                Zabawa skalą wszechświata\n              </h1>\n              <p className=\"text-muted-foreground mt-2\">\n                Podróż od najmniejszych cząstek do największych galaktyk\n              </p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"hidden md:flex items-center gap-2 bg-muted rounded-lg p-2\">\n                <Clock className=\"w-4 h-4 text-muted-foreground\" />\n                <span className=\"text-sm text-muted-foreground\">~20 min</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </motion.header>\n\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-12 py-8 space-y-12\">\n        {/* Daily Fact */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.1 }}\n        >\n          <DailyFact language={language} />\n        </motion.div>\n\n        {/* Scale Explorer Module */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n        >\n          <ScaleExplorer />\n        </motion.div>\n\n        {/* Educational Context */}\n        <motion.section\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.3 }}\n          className=\"space-y-6\"\n        >\n          <h2 className=\"text-2xl font-bold text-foreground\">\n            Zrozumienie skali w fizyce\n          </h2>\n          \n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-semibold text-foreground\">\n                Dlaczego skala ma znaczenie?\n              </h3>\n              <p className=\"text-muted-foreground\">\n                Zrozumienie względnych rozmiarów obiektów we wszechświecie pomaga \n                w pojmowaniu złożoności fizyki na różnych poziomach - od mechaniki kwantowej \n                po kosmologię.\n              </p>\n              <div className=\"bg-card p-4 rounded-lg border border-border\">\n                <h4 className=\"font-semibold text-card-foreground mb-2\">\n                  Ciekawostki o skali:\n                </h4>\n                <ul className=\"space-y-1 text-sm text-muted-foreground\">\n                  <li>• Gdyby atom był wielkości piłki futbolowej, jądro byłoby wielkości ziarnka ryżu</li>\n                  <li>• Człowiek jest w środku skali wszechświata</li>\n                  <li>• Galaktyka zawiera około 100 miliardów gwiazd</li>\n                </ul>\n              </div>\n            </div>\n            \n            <div className=\"bg-muted rounded-lg p-6 h-64 flex items-center justify-center\">\n              <div className=\"text-center text-muted-foreground\">\n                <Maximize className=\"w-16 h-16 mx-auto mb-4 text-primary\" />\n                <p className=\"text-sm\">Logarytmiczna reprezentacja skali</p>\n              </div>\n            </div>\n          </div>\n        </motion.section>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4042},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\nimport { FormattedMessage } from 'react-intl';\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">\n              <FormattedMessage id=\"error.404\" />\n            </h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            <FormattedMessage id=\"error.devMessage\" />\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":800},"client/src/types/education.ts":{"content":"export interface Topic {\n  id: string;\n  titlePl: string;\n  titleEn: string;\n  titleHu: string;\n  category: Category;\n  estimatedTime: number; // in minutes\n  difficulty: 'basic' | 'intermediate' | 'advanced';\n  interactiveModules: string[];\n  mdxContent: string;\n}\n\nexport interface Category {\n  id: string;\n  titlePl: string;\n  titleEn: string;\n  titleHu: string;\n  icon: string;\n  topics: Topic[];\n}\n\nexport interface InteractiveModule {\n  id: string;\n  type: 'simulation' | 'experiment' | 'quiz' | 'visualization' | '3d-model';\n  title: string;\n  description: string;\n  component: string;\n}\n\nexport interface QuizQuestion {\n  id: string;\n  questionPl: string;\n  questionEn: string;\n  questionHu: string;\n  options: QuizOption[];\n  correctAnswer: string;\n  explanation: string;\n  difficulty: 'easy' | 'medium' | 'hard';\n  topic: string;\n}\n\nexport interface QuizOption {\n  id: string;\n  textPl: string;\n  textEn: string;\n  textHu: string;\n}\n\nexport interface UserProgress {\n  categoryId: string;\n  topicId: string;\n  completed: boolean;\n  completionPercentage: number;\n  lastAccessed: Date;\n}\n\nexport interface ScaleLevel {\n  name: string;\n  size: string;\n  description: string;\n  visualization: string;\n}\n\nexport type Language = 'pl' | 'en' | 'hu';\n\nexport interface SimulationState {\n  isPlaying: boolean;\n  voltage: number;\n  frequency: number;\n  currentScale: number;\n  [key: string]: any;\n}\n","size_bytes":1398},"client/src/components/InteractiveModules/ACCurrent.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { motion } from 'framer-motion';\nimport { Radio } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Slider } from '@/components/ui/slider';\n\nexport function ACCurrent() {\n  const [frequency, setFrequency] = useState([50]);\n  const [oscillationPhase, setOscillationPhase] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setOscillationPhase(prev => (prev + frequency[0] * 0.1) % 360);\n    }, 50);\n\n    return () => clearInterval(interval);\n  }, [frequency]);\n\n  const setPresetFrequency = (freq: number) => {\n    setFrequency([freq]);\n  };\n\n  const getOscillationY = (baseY: number, index: number) => {\n    const phase = oscillationPhase + (index * 30);\n    return baseY + Math.sin((phase * Math.PI) / 180) * 15;\n  };\n\n  return (\n    <div className=\"interactive-module rounded-xl p-8\" data-testid=\"ac-current-module\">\n      <div className=\"flex items-center gap-3 mb-6\">\n        <div className=\"p-2 bg-primary rounded-lg\">\n          <Radio className=\"w-6 h-6 text-primary-foreground\" />\n        </div>\n        <h3 className=\"text-2xl font-bold text-card-foreground\">\n          Wizualizacja prądu zmiennego\n        </h3>\n      </div>\n\n      <div className=\"grid lg:grid-cols-2 gap-8\">\n        <div>\n          <p className=\"text-muted-foreground mb-6\">\n            Zmień częstotliwość prądu zmiennego i obserwuj, jak drgają elektrony. \n            Zauważ, że energia jest przenoszona przez falę, nie przez ruch elektronów!\n          </p>\n          \n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between\">\n              <label className=\"text-sm font-medium text-card-foreground\">\n                <FormattedMessage id=\"simulation.frequency\" defaultMessage=\"Częstotliwość\" />\n              </label>\n              <span className=\"text-primary font-mono text-sm\" data-testid=\"frequency-display\">\n                {frequency[0]} Hz\n              </span>\n            </div>\n            \n            <Slider\n              value={frequency}\n              onValueChange={setFrequency}\n              min={1}\n              max={100}\n              step={1}\n              className=\"w-full\"\n              aria-label=\"Ustaw częstotliwość prądu zmiennego w hercach\"\n              data-testid=\"frequency-slider\"\n            />\n            \n            <div className=\"grid grid-cols-3 gap-2 text-xs\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setPresetFrequency(50)}\n                aria-label=\"Ustaw częstotliwość na 50 Hz (standard europejski)\"\n                data-testid=\"freq-50\"\n              >\n                50 Hz (EU)\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setPresetFrequency(60)}\n                aria-label=\"Ustaw częstotliwość na 60 Hz (standard amerykański)\"\n                data-testid=\"freq-60\"\n              >\n                60 Hz (US)\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setPresetFrequency(1)}\n                data-testid=\"freq-1\"\n              >\n                1 Hz (wolno)\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-muted rounded-lg p-6 relative\" style={{ height: '300px' }}>\n          <h4 className=\"text-sm font-medium text-muted-foreground mb-4\">\n            Drgania elektronów\n          </h4>\n          \n          {/* AC Visualization */}\n          <div className=\"relative w-full h-48 border-2 border-border rounded-lg overflow-hidden bg-background\">\n            {/* Sine wave background */}\n            <svg className=\"absolute inset-0 w-full h-full\" viewBox=\"0 0 400 200\">\n              <defs>\n                <linearGradient id=\"waveGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                  <stop offset=\"0%\" style={{stopColor: \"hsl(var(--primary))\", stopOpacity: 0.3}} />\n                  <stop offset=\"100%\" style={{stopColor: \"hsl(var(--primary))\", stopOpacity: 0.1}} />\n                </linearGradient>\n              </defs>\n              <path \n                d={`M 0 100 ${Array.from({ length: 20 }, (_, i) => {\n                  const x = i * 20;\n                  const y = 100 + Math.sin((oscillationPhase + i * 18) * Math.PI / 180) * 30;\n                  return `L ${x} ${y}`;\n                }).join(' ')}`}\n                stroke=\"hsl(var(--primary))\" \n                strokeWidth=\"2\" \n                fill=\"url(#waveGradient)\"\n              />\n            </svg>\n            \n            {/* Oscillating electrons */}\n            {Array.from({ length: 3 }, (_, i) => (\n              <motion.div\n                key={i}\n                className=\"absolute w-3 h-3 bg-accent rounded-full\"\n                animate={{\n                  x: 50 + i * 60,\n                  y: getOscillationY(90, i)\n                }}\n                transition={{ duration: 0.05 }}\n                data-testid={`oscillating-electron-${i}`}\n              />\n            ))}\n          </div>\n\n          <div className=\"mt-4 text-center\">\n            <p className=\"text-sm text-muted-foreground\">\n              Fala elektromagnetyczna niosąca energię →\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":5514},"client/src/components/InteractiveModules/AdaptiveQuiz.tsx":{"content":"import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Brain, Trophy } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Progress } from '@/components/ui/progress';\nimport { SAMPLE_QUIZ_QUESTIONS } from '@/lib/constants';\nimport { QuizQuestion, Language } from '@/types/education';\n\ninterface AdaptiveQuizProps {\n  language: Language;\n}\n\nexport function AdaptiveQuiz({ language }: AdaptiveQuizProps) {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);\n  const [answers, setAnswers] = useState<string[]>([]);\n  const [showResult, setShowResult] = useState(false);\n\n  const questions = SAMPLE_QUIZ_QUESTIONS;\n  const question = questions[currentQuestion];\n\n  const handleAnswerSelect = (answerId: string) => {\n    setSelectedAnswer(answerId);\n  };\n\n  const handleNext = () => {\n    if (selectedAnswer) {\n      const newAnswers = [...answers, selectedAnswer];\n      setAnswers(newAnswers);\n      \n      if (currentQuestion < questions.length - 1) {\n        setCurrentQuestion(prev => prev + 1);\n        setSelectedAnswer(null);\n      } else {\n        setShowResult(true);\n      }\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(prev => prev - 1);\n      setSelectedAnswer(answers[currentQuestion - 1] || null);\n      setAnswers(prev => prev.slice(0, -1));\n    }\n  };\n\n  const getQuestionText = () => {\n    switch (language) {\n      case 'en': return question.questionEn;\n      case 'hu': return question.questionHu;\n      default: return question.questionPl;\n    }\n  };\n\n  const getOptionText = (option: any) => {\n    switch (language) {\n      case 'en': return option.textEn;\n      case 'hu': return option.textHu;\n      default: return option.textPl;\n    }\n  };\n\n  if (showResult) {\n    const score = answers.filter((answer, index) => answer === questions[index].correctAnswer).length;\n    \n    return (\n      <div className=\"interactive-module rounded-xl p-8\" data-testid=\"quiz-results\">\n        <div className=\"text-center\">\n          <Trophy className=\"w-16 h-16 text-accent mx-auto mb-4\" />\n          <h3 className=\"text-2xl font-bold text-card-foreground mb-4\">\n            Quiz ukończony!\n          </h3>\n          <p className=\"text-lg text-muted-foreground mb-6\">\n            Twój wynik: {score} z {questions.length} ({Math.round((score / questions.length) * 100)}%)\n          </p>\n          <Button\n            onClick={() => {\n              setCurrentQuestion(0);\n              setAnswers([]);\n              setSelectedAnswer(null);\n              setShowResult(false);\n            }}\n            data-testid=\"restart-quiz\"\n          >\n            Rozpocznij ponownie\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"interactive-module rounded-xl p-8\" data-testid=\"adaptive-quiz-module\">\n      <div className=\"flex items-center gap-3 mb-6\">\n        <div className=\"p-2 bg-primary rounded-lg\">\n          <Brain className=\"w-6 h-6 text-primary-foreground\" />\n        </div>\n        <h3 className=\"text-2xl font-bold text-card-foreground\">Quiz adaptacyjny</h3>\n      </div>\n\n      <div className=\"grid lg:grid-cols-3 gap-8\">\n        <div className=\"lg:col-span-2\">\n          {/* Question Card */}\n          <div className=\"bg-background rounded-lg p-6 border border-border mb-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <span className=\"text-sm font-medium text-muted-foreground\" data-testid=\"question-counter\">\n                <FormattedMessage \n                  id=\"quiz.question\" \n                  defaultMessage=\"Pytanie {current} z {total}\"\n                  values={{ current: currentQuestion + 1, total: questions.length }}\n                />\n              </span>\n              <span className=\"px-3 py-1 bg-accent text-accent-foreground rounded-full text-xs font-medium\">\n                {question.difficulty === 'easy' ? 'Łatwy' : question.difficulty === 'medium' ? 'Średni' : 'Trudny'}\n              </span>\n            </div>\n            \n            <h4 className=\"text-xl font-semibold text-foreground mb-6\" data-testid=\"question-text\">\n              {getQuestionText()}\n            </h4>\n            \n            <div className=\"space-y-3\">\n              {question.options.map((option) => (\n                <Button\n                  key={option.id}\n                  variant={selectedAnswer === option.id ? \"default\" : \"outline\"}\n                  className=\"w-full p-4 text-left justify-start h-auto\"\n                  onClick={() => handleAnswerSelect(option.id)}\n                  aria-label={`Wybierz odpowiedź ${option.id.toUpperCase()}: ${getOptionText(option)}`}\n                  role=\"radio\"\n                  aria-checked={selectedAnswer === option.id}\n                  data-testid={`option-${option.id}`}\n                >\n                  {option.id.toUpperCase()}) {getOptionText(option)}\n                </Button>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"flex justify-between items-center\">\n            <Button\n              variant=\"outline\"\n              onClick={handlePrevious}\n              disabled={currentQuestion === 0}\n              aria-label=\"Przejdź do poprzedniego pytania\"\n              data-testid=\"previous-button\"\n            >\n              <FormattedMessage id=\"quiz.previous\" defaultMessage=\"Poprzednie\" />\n            </Button>\n            \n            <div className=\"flex gap-2\">\n              {questions.map((_, index) => (\n                <div\n                  key={index}\n                  className={`w-8 h-2 rounded-full ${\n                    index < currentQuestion ? 'bg-primary' : \n                    index === currentQuestion ? 'bg-accent' : 'bg-muted'\n                  }`}\n                  data-testid={`progress-dot-${index}`}\n                />\n              ))}\n            </div>\n            \n            <Button\n              onClick={handleNext}\n              disabled={!selectedAnswer}\n              aria-label={currentQuestion === questions.length - 1 ? \"Zakończ quiz\" : \"Przejdź do następnego pytania\"}\n              data-testid=\"next-button\"\n            >\n              <FormattedMessage id=\"quiz.next\" defaultMessage=\"Następne\" />\n            </Button>\n          </div>\n        </div>\n\n        {/* Progress Sidebar */}\n        <div>\n          <div className=\"bg-card rounded-lg p-6 border border-border\">\n            <h4 className=\"font-semibold text-card-foreground mb-4\">\n              <FormattedMessage id=\"quiz.progress\" defaultMessage=\"Twój postęp\" />\n            </h4>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <div className=\"flex justify-between text-sm mb-2\">\n                  <span className=\"text-muted-foreground\">Elektryczność</span>\n                  <span className=\"text-primary\">75%</span>\n                </div>\n                <Progress value={75} className=\"h-2\" />\n              </div>\n              \n              <div>\n                <div className=\"flex justify-between text-sm mb-2\">\n                  <span className=\"text-muted-foreground\">Magnetyzm</span>\n                  <span className=\"text-muted-foreground\">0%</span>\n                </div>\n                <Progress value={0} className=\"h-2\" />\n              </div>\n              \n              <div>\n                <div className=\"flex justify-between text-sm mb-2\">\n                  <span className=\"text-muted-foreground\">Ziemia i kosmos</span>\n                  <span className=\"text-muted-foreground\">0%</span>\n                </div>\n                <Progress value={0} className=\"h-2\" />\n              </div>\n            </div>\n\n            <div className=\"mt-6 p-4 bg-muted rounded-lg\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <Trophy className=\"w-4 h-4 text-accent\" />\n                <span className=\"text-sm font-medium text-foreground\">Osiągnięcie</span>\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Ukończono pierwszy rozdział o prądzie elektrycznym!\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":8332},"client/src/components/InteractiveModules/BilliardBalls.tsx":{"content":"import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Target, PlayCircle } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { FormattedMessage } from 'react-intl';\n\nexport function BilliardBalls() {\n  const [isAnimating, setIsAnimating] = useState(false);\n\n  const triggerDemo = () => {\n    setIsAnimating(true);\n    setTimeout(() => setIsAnimating(false), 2000);\n  };\n\n  const ballVariants = {\n    initial: { x: 0 },\n    impact: (i: number) => ({\n      x: i === 0 ? 10 : i === 7 ? 40 : 5,\n      transition: { delay: i * 0.1, duration: 0.2, type: \"spring\" }\n    })\n  };\n\n  return (\n    <div className=\"interactive-module rounded-xl p-8\" data-testid=\"billiard-balls-module\">\n      <div className=\"flex items-center gap-3 mb-6\">\n        <div className=\"p-2 bg-primary rounded-lg\">\n          <Target className=\"w-6 h-6 text-primary-foreground\" />\n        </div>\n        <h3 className=\"text-2xl font-bold text-card-foreground\">\n          Eksperyment z kulkami bilardowymi\n        </h3>\n      </div>\n\n      <div className=\"grid lg:grid-cols-2 gap-8\">\n        <div>\n          <p className=\"text-muted-foreground mb-6\">\n            <FormattedMessage id=\"billiard.description\" />\n          </p>\n          \n          <Button\n            onClick={triggerDemo}\n            disabled={isAnimating}\n            className=\"px-6 py-3 bg-primary text-primary-foreground rounded-lg hover:bg-accent hover:text-accent-foreground transition-colors flex items-center gap-2\"\n            data-testid=\"trigger-demo-button\"\n          >\n            <PlayCircle className=\"w-5 h-5\" />\n            <FormattedMessage id=\"billiard.pushFirst\" />\n          </Button>\n        </div>\n\n        <div className=\"bg-muted rounded-lg p-6\">\n          <h4 className=\"text-sm font-medium text-muted-foreground mb-4\">\n            Rura z kulkami bilardowymi\n          </h4>\n          \n          <div className=\"relative\">\n            {/* Tube representation */}\n            <div className=\"bg-gradient-to-r from-amber-800 to-amber-600 h-16 rounded-full flex items-center justify-center relative overflow-hidden\">\n              {/* Billiard balls */}\n              <div className=\"flex items-center gap-1 px-4\">\n                {Array.from({ length: 8 }, (_, i) => (\n                  <motion.div\n                    key={i}\n                    className=\"billiard-ball\"\n                    custom={i}\n                    variants={ballVariants}\n                    initial=\"initial\"\n                    animate={isAnimating ? \"impact\" : \"initial\"}\n                    data-testid={`ball-${i}`}\n                  />\n                ))}\n              </div>\n            </div>\n            \n            <div className=\"mt-4 text-center\">\n              <p className=\"text-sm text-muted-foreground\">\n                Naciśnij przycisk powyżej, aby zobaczyć natychmiastowy efekt\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":2995},"client/src/components/InteractiveModules/CircuitBuilder.tsx":{"content":"import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Cpu, Battery, Lightbulb, Minus, Power, Move } from 'lucide-react';\n\ninterface Component {\n  id: string;\n  type: 'battery' | 'bulb' | 'wire' | 'switch';\n  x: number;\n  y: number;\n}\n\nexport function CircuitBuilder() {\n  const [components, setComponents] = useState<Component[]>([]);\n  const [draggedComponent, setDraggedComponent] = useState<string | null>(null);\n  const [circuitClosed, setCircuitClosed] = useState(false);\n\n  const componentIcons = {\n    battery: Battery,\n    bulb: Lightbulb,\n    wire: Minus,\n    switch: Power\n  };\n\n\n  const handleDragStart = (e: React.DragEvent, componentType: string) => {\n    e.dataTransfer.setData('componentType', componentType);\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    const componentType = e.dataTransfer.getData('componentType') as Component['type'];\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    const newComponent: Component = {\n      id: `${componentType}-${Date.now()}`,\n      type: componentType,\n      x,\n      y\n    };\n\n    setComponents(prev => [...prev, newComponent]);\n    \n    // Simple circuit completion check\n    const hasBattery = [...components, newComponent].some(c => c.type === 'battery');\n    const hasBulb = [...components, newComponent].some(c => c.type === 'bulb');\n    const hasWires = [...components, newComponent].filter(c => c.type === 'wire').length >= 2;\n    \n    setCircuitClosed(hasBattery && hasBulb && hasWires);\n  };\n\n  const ComponentPalette = ({ type }: { type: Component['type'] }) => {\n    const IconComponent = componentIcons[type];\n    const colorClasses = {\n      battery: 'bg-primary',\n      bulb: 'bg-accent',\n      wire: 'bg-muted',\n      switch: 'bg-destructive'\n    };\n\n    return (\n      <div\n        className=\"circuit-component p-4 bg-secondary rounded-lg border-2 border-dashed border-border text-center cursor-grab\"\n        draggable\n        onDragStart={(e) => handleDragStart(e, type)}\n        role=\"button\"\n        tabIndex={0}\n        aria-label={`circuit.dragComponent`}\n        data-testid={`component-${type}`}\n      >\n        <div className={`w-8 h-8 ${colorClasses[type]} rounded mx-auto mb-2 flex items-center justify-center`}>\n          <IconComponent className=\"w-4 h-4 text-primary-foreground\" />\n        </div>\n        <span className=\"text-sm\">\n          <FormattedMessage id={`circuit.${type}`} />\n        </span>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"interactive-module rounded-xl p-8\" data-testid=\"circuit-builder-module\">\n      <div className=\"flex items-center gap-3 mb-6\">\n        <div className=\"p-2 bg-primary rounded-lg\">\n          <Cpu className=\"w-6 h-6 text-primary-foreground\" />\n        </div>\n        <h3 className=\"text-2xl font-bold text-card-foreground\">\n          Konstruktor obwodów\n        </h3>\n      </div>\n\n      <div className=\"grid lg:grid-cols-2 gap-8\">\n        <div>\n          <p className=\"text-muted-foreground mb-6\">\n            <FormattedMessage id=\"circuit.remember\" />\n          </p>\n          \n          {/* Component Palette */}\n          <div className=\"space-y-4\">\n            <h4 className=\"font-semibold text-card-foreground\">Komponenty:</h4>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <ComponentPalette type=\"battery\" />\n              <ComponentPalette type=\"bulb\" />\n              <ComponentPalette type=\"wire\" />\n              <ComponentPalette type=\"switch\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-muted rounded-lg p-6\" style={{ height: '400px' }}>\n          <h4 className=\"text-sm font-medium text-muted-foreground mb-4\">\n            <FormattedMessage id=\"circuit.buildArea\" />\n          </h4>\n          \n          <div\n            className=\"w-full h-full bg-background border-2 border-dashed border-border rounded-lg relative\"\n            onDragOver={handleDragOver}\n            onDrop={handleDrop}\n            role=\"application\"\n            aria-label=\"Obszar budowy obwodu - upuść tutaj komponenty\"\n            data-testid=\"circuit-drop-zone\"\n          >\n            {components.length === 0 ? (\n              <div className=\"absolute inset-0 flex items-center justify-center text-muted-foreground\">\n                <div className=\"text-center\">\n                  <Move className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\n                  <p className=\"text-sm\"><FormattedMessage id=\"circuit.dragHere\" /></p>\n                  <p className=\"text-xs opacity-70\"><FormattedMessage id=\"circuit.toBuild\" /></p>\n                </div>\n              </div>\n            ) : (\n              components.map((component) => {\n                const IconComponent = componentIcons[component.type];\n                return (\n                  <div\n                    key={component.id}\n                    className=\"absolute w-8 h-8 bg-primary rounded flex items-center justify-center\"\n                    style={{ left: component.x - 16, top: component.y - 16 }}\n                    data-testid={`placed-${component.type}`}\n                  >\n                    <IconComponent className=\"w-4 h-4 text-primary-foreground\" />\n                  </div>\n                );\n              })\n            )}\n          </div>\n          \n          <div className=\"mt-4 flex justify-between items-center\">\n            <span className=\"text-sm text-muted-foreground\">\n              <FormattedMessage id=\"circuit.status\" />:\n            </span>\n            <span \n              className={`px-3 py-1 rounded-full text-xs font-medium ${\n                circuitClosed \n                  ? 'bg-primary text-primary-foreground' \n                  : 'bg-destructive text-destructive-foreground'\n              }`}\n              data-testid=\"circuit-status\"\n            >\n              <FormattedMessage id={circuitClosed ? 'circuit.closed' : 'circuit.open'} />\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":6169},"client/src/components/InteractiveModules/ElectronDrift.tsx":{"content":"import React, { useState, useEffect } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { motion } from 'framer-motion';\nimport { Activity, Play, Pause, RotateCcw } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Slider } from '@/components/ui/slider';\n\nexport function ElectronDrift() {\n  const [voltage, setVoltage] = useState([0]);\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [electrons, setElectrons] = useState(\n    Array.from({ length: 5 }, (_, i) => ({\n      id: i,\n      x: 40 + i * 40,\n      y: 30 + Math.random() * 40,\n      chaotic: true\n    }))\n  );\n\n  useEffect(() => {\n    if (!isPlaying) return;\n\n    const interval = setInterval(() => {\n      setElectrons(prev => prev.map(electron => {\n        if (voltage[0] === 0) {\n          // Chaotic movement\n          return {\n            ...electron,\n            x: Math.max(10, Math.min(270, electron.x + (Math.random() - 0.5) * 20)),\n            y: Math.max(10, Math.min(70, electron.y + (Math.random() - 0.5) * 20)),\n            chaotic: true\n          };\n        } else {\n          // Drift movement\n          return {\n            ...electron,\n            x: electron.x > 280 ? -10 : electron.x + voltage[0] * 0.3,\n            y: electron.y + (Math.random() - 0.5) * 4,\n            chaotic: false\n          };\n        }\n      }));\n    }, 100);\n\n    return () => clearInterval(interval);\n  }, [voltage, isPlaying]);\n\n  const resetSimulation = () => {\n    setVoltage([0]);\n    setElectrons(Array.from({ length: 5 }, (_, i) => ({\n      id: i,\n      x: 40 + i * 40,\n      y: 30 + Math.random() * 40,\n      chaotic: true\n    })));\n  };\n\n  return (\n    <div className=\"interactive-module rounded-xl p-8\" data-testid=\"electron-drift-module\">\n      <div className=\"flex items-center gap-3 mb-6\">\n        <div className=\"p-2 bg-primary rounded-lg\">\n          <Activity className=\"w-6 h-6 text-primary-foreground\" />\n        </div>\n        <h3 className=\"text-2xl font-bold text-card-foreground\">\n          Symulacja dryfu elektronów\n        </h3>\n      </div>\n      \n      <div className=\"grid lg:grid-cols-2 gap-8\">\n        <div>\n          <p className=\"text-muted-foreground mb-6\">\n            Obserwuj zachowanie elektronów w przewodniku. Bez napięcia poruszają się chaotycznie, \n            z napięciem - powoli dryfują w jednym kierunku.\n          </p>\n          \n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <label className=\"text-sm font-medium text-card-foreground\">\n                <FormattedMessage id=\"simulation.voltage\" defaultMessage=\"Napięcie\" />\n              </label>\n              <span className=\"text-primary font-mono text-sm\" data-testid=\"voltage-display\">\n                {voltage[0]}V\n              </span>\n            </div>\n            \n            <Slider\n              value={voltage}\n              onValueChange={setVoltage}\n              max={12}\n              step={1}\n              className=\"w-full\"\n              aria-label=\"Ustaw napięcie w woltach\"\n              data-testid=\"voltage-slider\"\n            />\n            \n            <div className=\"flex items-center gap-4 mt-4\">\n              <Button\n                variant=\"secondary\"\n                onClick={resetSimulation}\n                aria-label=\"Zresetuj symulację dryfu elektronów\"\n                data-testid=\"reset-button\"\n              >\n                <RotateCcw className=\"w-4 h-4 mr-2\" />\n                <FormattedMessage id=\"simulation.reset\" defaultMessage=\"Reset\" />\n              </Button>\n              \n              <Button\n                variant=\"default\"\n                onClick={() => setIsPlaying(!isPlaying)}\n                aria-label={isPlaying ? \"Zatrzymaj symulację\" : \"Uruchom symulację\"}\n                data-testid=\"play-pause-button\"\n              >\n                {isPlaying ? (\n                  <Pause className=\"w-4 h-4\" />\n                ) : (\n                  <Play className=\"w-4 h-4\" />\n                )}\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-muted rounded-lg p-6 relative overflow-hidden\" style={{ height: '300px' }}>\n          <h4 className=\"text-sm font-medium text-muted-foreground mb-4\">\n            Przewodnik miedziany\n          </h4>\n          \n          {/* Wire representation */}\n          <div className=\"relative w-full h-32 bg-gradient-to-r from-amber-900 to-amber-700 rounded-lg border-2 border-accent opacity-80\">\n            {/* Electron dots */}\n            {electrons.map((electron) => (\n              <motion.div\n                key={electron.id}\n                className=\"w-2 h-2 bg-primary rounded-full absolute\"\n                animate={{\n                  x: electron.x,\n                  y: electron.y\n                }}\n                transition={{ duration: 0.1 }}\n                data-testid={`electron-${electron.id}`}\n              />\n            ))}\n            \n            {/* Voltage indicators */}\n            <div className=\"absolute -left-6 top-1/2 transform -translate-y-1/2 text-primary font-bold\">\n              +\n            </div>\n            <div className=\"absolute -right-6 top-1/2 transform -translate-y-1/2 text-blue-400 font-bold\">\n              -\n            </div>\n          </div>\n\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-sm text-muted-foreground\" data-testid=\"simulation-status\">\n              {voltage[0] === 0 \n                ? 'Brak napięcia - ruch chaotyczny' \n                : `Napięcie ${voltage[0]}V - powolny dryf →`\n              }\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":5723},"client/src/components/InteractiveModules/ScaleExplorer.tsx":{"content":"import React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { motion } from 'framer-motion';\nimport { Maximize } from 'lucide-react';\nimport { Slider } from '@/components/ui/slider';\nimport { SCALE_LEVELS } from '@/lib/constants';\n\nexport function ScaleExplorer() {\n  const [currentScale, setCurrentScale] = useState([3]);\n\n  const scale = SCALE_LEVELS[currentScale[0]];\n\n  const getVisualization = () => {\n    switch (scale.visualization) {\n      case 'atom':\n        return (\n          <div className=\"relative w-32 h-32\">\n            <div className=\"w-6 h-6 bg-primary rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"></div>\n            <div className=\"w-32 h-32 border-2 border-primary border-opacity-30 rounded-full absolute animate-spin\" style={{animationDuration: '3s'}}></div>\n            <div className=\"w-24 h-24 border border-accent border-opacity-40 rounded-full absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 animate-spin\" style={{animationDuration: '2s', animationDirection: 'reverse'}}></div>\n          </div>\n        );\n      case 'molecule':\n        return (\n          <div className=\"relative w-32 h-32 flex items-center justify-center\">\n            <div className=\"w-8 h-8 bg-blue-400 rounded-full\"></div>\n            <div className=\"w-6 h-6 bg-red-400 rounded-full ml-2\"></div>\n            <div className=\"w-6 h-6 bg-red-400 rounded-full ml-1\"></div>\n          </div>\n        );\n      case 'human':\n        return (\n          <div className=\"relative w-16 h-32 flex items-center justify-center\">\n            <div className=\"w-8 h-8 bg-primary rounded-full mb-2\"></div>\n            <div className=\"w-12 h-20 bg-secondary rounded-lg\"></div>\n          </div>\n        );\n      case 'earth':\n        return (\n          <div className=\"relative w-32 h-32\">\n            <div className=\"w-32 h-32 bg-gradient-to-b from-blue-400 to-green-400 rounded-full\"></div>\n          </div>\n        );\n      default:\n        return (\n          <div className=\"relative w-24 h-24\">\n            <div className=\"w-24 h-24 bg-primary rounded-full opacity-60\"></div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"interactive-module rounded-xl p-8\" data-testid=\"scale-explorer-module\">\n      <div className=\"flex items-center gap-3 mb-6\">\n        <div className=\"p-2 bg-primary rounded-lg\">\n          <Maximize className=\"w-6 h-6 text-primary-foreground\" />\n        </div>\n        <h3 className=\"text-2xl font-bold text-card-foreground\">\n          Zabawa skalą wszechświata\n        </h3>\n      </div>\n\n      <div className=\"grid lg:grid-cols-2 gap-8\">\n        <div>\n          <p className=\"text-muted-foreground mb-6\">\n            Podróżuj przez skale wszechświata - od najmniejszych cząstek do największych galaktyk. \n            Interaktywne powiększanie pomoże Ci zrozumieć względne rozmiary obiektów.\n          </p>\n          \n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <label className=\"text-sm font-medium text-card-foreground\">\n                <FormattedMessage id=\"scale.level\" defaultMessage=\"Skala\" />\n              </label>\n              <span className=\"text-primary font-mono text-sm\" data-testid=\"scale-name\">\n                {scale.name}\n              </span>\n            </div>\n            \n            <div className=\"relative\">\n              <Slider\n                value={currentScale}\n                onValueChange={setCurrentScale}\n                min={0}\n                max={SCALE_LEVELS.length - 1}\n                step={1}\n                className=\"w-full\"\n                aria-label=\"Wybierz skal\\u0119 wszech\\u015bwiata - od quark\\u00f3w do galaktyk\"\n                data-testid=\"scale-slider\"\n              />\n              \n              {/* Scale markers */}\n              <div className=\"flex justify-between text-xs text-muted-foreground mt-2\">\n                <span>Quark</span>\n                <span>Atom</span>\n                <span>Komórka</span>\n                <span>Człowiek</span>\n                <span>Ziemia</span>\n                <span>Galaktyka</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-muted rounded-lg p-6 relative overflow-hidden\" style={{ height: '300px' }}>\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            {/* Scale visualization container */}\n            <motion.div\n              key={currentScale[0]}\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.5 }}\n              className=\"scale-zoom\"\n              data-testid=\"scale-visualization\"\n            >\n              {getVisualization()}\n            </motion.div>\n          </div>\n          \n          <div className=\"absolute bottom-4 left-6 right-6\">\n            <div className=\"bg-background bg-opacity-80 backdrop-blur-sm rounded-lg p-3\">\n              <p className=\"text-sm text-foreground font-medium\" data-testid=\"scale-description\">\n                {scale.description}\n              </p>\n              <p className=\"text-xs text-muted-foreground\" data-testid=\"scale-size\">\n                Rozmiar: {scale.size}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":5421},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}},"version":1}